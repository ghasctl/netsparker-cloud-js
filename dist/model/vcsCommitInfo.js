"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VcsCommitInfo = void 0;
/**
* Represents optional commit info comes from Netsparker continuous integration plugins.
*/
class VcsCommitInfo {
    static getAttributeTypeMap() {
        return VcsCommitInfo.attributeTypeMap;
    }
}
exports.VcsCommitInfo = VcsCommitInfo;
VcsCommitInfo.discriminator = undefined;
VcsCommitInfo.attributeTypeMap = [
    {
        "name": "ciBuildConfigurationName",
        "baseName": "CiBuildConfigurationName",
        "type": "string"
    },
    {
        "name": "ciBuildHasChange",
        "baseName": "CiBuildHasChange",
        "type": "boolean"
    },
    {
        "name": "ciBuildId",
        "baseName": "CiBuildId",
        "type": "string"
    },
    {
        "name": "ciBuildServerName",
        "baseName": "CiBuildServerName",
        "type": "string"
    },
    {
        "name": "ciBuildServerVersion",
        "baseName": "CiBuildServerVersion",
        "type": "string"
    },
    {
        "name": "ciBuildUrl",
        "baseName": "CiBuildUrl",
        "type": "string"
    },
    {
        "name": "ciNcPluginVersion",
        "baseName": "CiNcPluginVersion",
        "type": "string"
    },
    {
        "name": "ciTimestamp",
        "baseName": "CiTimestamp",
        "type": "Date"
    },
    {
        "name": "comitterId",
        "baseName": "ComitterId",
        "type": "string"
    },
    {
        "name": "committer",
        "baseName": "Committer",
        "type": "string"
    },
    {
        "name": "committerName",
        "baseName": "CommitterName",
        "type": "string"
    },
    {
        "name": "committerOverride",
        "baseName": "CommitterOverride",
        "type": "string"
    },
    {
        "name": "integrationSystem",
        "baseName": "IntegrationSystem",
        "type": "VcsCommitInfo.IntegrationSystemEnum"
    },
    {
        "name": "isCommiterExistAndAuthorizedInNc",
        "baseName": "IsCommiterExistAndAuthorizedInNc",
        "type": "boolean"
    },
    {
        "name": "vcsName",
        "baseName": "VcsName",
        "type": "string"
    },
    {
        "name": "vcsVersion",
        "baseName": "VcsVersion",
        "type": "string"
    }
];
(function (VcsCommitInfo) {
    let IntegrationSystemEnum;
    (function (IntegrationSystemEnum) {
        IntegrationSystemEnum[IntegrationSystemEnum["Teamcity"] = 'Teamcity'] = "Teamcity";
        IntegrationSystemEnum[IntegrationSystemEnum["Jenkins"] = 'Jenkins'] = "Jenkins";
        IntegrationSystemEnum[IntegrationSystemEnum["Bamboo"] = 'Bamboo'] = "Bamboo";
        IntegrationSystemEnum[IntegrationSystemEnum["GitLab"] = 'GitLab'] = "GitLab";
        IntegrationSystemEnum[IntegrationSystemEnum["AzureDevOps"] = 'AzureDevOps'] = "AzureDevOps";
        IntegrationSystemEnum[IntegrationSystemEnum["Jira"] = 'Jira'] = "Jira";
        IntegrationSystemEnum[IntegrationSystemEnum["CircleCi"] = 'CircleCI'] = "CircleCi";
        IntegrationSystemEnum[IntegrationSystemEnum["TravisCi"] = 'TravisCI'] = "TravisCi";
        IntegrationSystemEnum[IntegrationSystemEnum["UrbanCodeDeploy"] = 'UrbanCodeDeploy'] = "UrbanCodeDeploy";
        IntegrationSystemEnum[IntegrationSystemEnum["GitHubActions"] = 'GitHubActions'] = "GitHubActions";
    })(IntegrationSystemEnum = VcsCommitInfo.IntegrationSystemEnum || (VcsCommitInfo.IntegrationSystemEnum = {}));
})(VcsCommitInfo = exports.VcsCommitInfo || (exports.VcsCommitInfo = {}));
//# sourceMappingURL=vcsCommitInfo.js.map