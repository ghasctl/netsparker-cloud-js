/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { IntegrationWizardResultModel } from './integrationWizardResultModel';
import { NotificationIntegrationCustomFieldModel } from './notificationIntegrationCustomFieldModel';
/**
* The ServiceNow integration info
*/
export declare class ServiceNowIntegrationInfoModel {
    /**
    * Gets or sets the assigned to ID.
    */
    'assignedToId'?: string;
    /**
    * Gets or sets the caller ID.
    */
    'callerId'?: string;
    /**
    * Gets or sets the category to assign cases to.
    */
    'serviceNowCategoryTypes'?: ServiceNowIntegrationInfoModel.ServiceNowCategoryTypesEnum;
    /**
    * Gets or sets the category to assign cases to.
    */
    'categoryTypes': string;
    /**
    * Gets or sets the type of the issue.
    */
    'reopenStatus'?: string;
    /**
    * Gets or sets the category types
    */
    'serviceNowReopenCategoryType'?: ServiceNowIntegrationInfoModel.ServiceNowReopenCategoryTypeEnum;
    /**
    * Gets or sets the category types
    */
    'serviceNowOnHoldReasonType'?: ServiceNowIntegrationInfoModel.ServiceNowOnHoldReasonTypeEnum;
    /**
    * if this option selected , after retesting change the status of fixed vulnerabilities to Closed..
    */
    'closeTheFixedVulnerabilities'?: boolean;
    /**
    * Gets or sets the category to assign cases to.
    */
    'category'?: string;
    /**
    * Gets or sets the due date.
    */
    'dueDays'?: number;
    /**
    * The severity of the incident.
    */
    'severity'?: number;
    /**
    * Gets or sets the ServiceNow password for the user.
    */
    'password': string;
    /**
    * Gets or sets the type of the issue. Need to be overriden for webhooks supported integrations
    */
    'resolvedStatus'?: string;
    /**
    * Gets or sets the ServiceNow resolved type of the issue.
    */
    'resolvedStatusServiceNow'?: ServiceNowIntegrationInfoModel.ResolvedStatusServiceNowEnum;
    'type'?: ServiceNowIntegrationInfoModel.TypeEnum;
    /**
    * Gets or sets the URL.
    */
    'url': string;
    /**
    * Gets FogBugz web hook URL.
    */
    'webhookUrl'?: string;
    /**
    * Gets or sets the username.
    */
    'username': string;
    /**
    * Gets or sets type of the integration issue template.
    */
    'templateType'?: ServiceNowIntegrationInfoModel.TemplateTypeEnum;
    /**
    * Gets or sets the account ID.
    */
    'accountID'?: string;
    /**
    * Gets or sets the Custom Fields.
    */
    'customFields'?: Array<NotificationIntegrationCustomFieldModel>;
    /**
    * Gets the generic error message.
    */
    'genericErrorMessage'?: string;
    /**
    * Gets or sets the request identifier.
    */
    'identifier'?: string;
    /**
    * Gets or sets the {Invicti.Cloud.Core.Models.ScanNotificationIntegration} name.
    */
    'name'?: string;
    'integrationWizardResultModel'?: IntegrationWizardResultModel;
    /**
    * Gets the test message body.
    */
    'testMessageBody'?: string;
    /**
    * Gets the test message title.
    */
    'testMessageTitle'?: string;
    /**
    * Gets or sets the title format.
    */
    'titleFormat': string;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace ServiceNowIntegrationInfoModel {
    enum ServiceNowCategoryTypesEnum {
        Inquiry,
        Software,
        Hardware,
        Network,
        Database
    }
    enum ServiceNowReopenCategoryTypeEnum {
        New,
        InProgress,
        OnHold
    }
    enum ServiceNowOnHoldReasonTypeEnum {
        AwaitingCaller,
        AwaitingChange,
        AwaitingProblem,
        AwaitingVendor
    }
    enum ResolvedStatusServiceNowEnum {
        Resolved,
        Closed
    }
    enum TypeEnum {
        Jira,
        GitHub,
        Tfs,
        FogBugz,
        ServiceNow,
        Slack,
        GitLab,
        Bitbucket,
        Unfuddle,
        Zapier,
        AzureDevOps,
        Redmine,
        Bugzilla,
        Kafka,
        PagerDuty,
        MicrosoftTeams,
        Clubhouse,
        Trello,
        Asana,
        Webhook,
        Kenna,
        Freshservice,
        YouTrack,
        NetsparkerEnterprise,
        Splunk,
        Mattermost,
        Hashicorp,
        PivotalTracker,
        CyberArk
    }
    enum TemplateTypeEnum {
        Standard,
        Detailed
    }
}
