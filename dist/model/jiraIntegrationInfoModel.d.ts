/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { IntegrationUserMappingItemModel } from './integrationUserMappingItemModel';
import { IntegrationWizardResultModel } from './integrationWizardResultModel';
import { NotificationIntegrationCustomFieldModel } from './notificationIntegrationCustomFieldModel';
/**
* The Jira integration info
*/
export declare class JiraIntegrationInfoModel {
    'assignedTo'?: string;
    'autoAssignToPerson'?: boolean;
    'dueDays'?: number;
    'isCloud'?: boolean;
    'issueType': string;
    'labels'?: string;
    'components'?: string;
    'mappedJiraUsers'?: Array<IntegrationUserMappingItemModel>;
    'password': string;
    /**
    * Gets or sets the priority.
    */
    'priority'?: string;
    /**
    * The issue security level.
    */
    'securityLevel'?: string;
    'projectKey': string;
    /**
    * Gets or sets the type of the issue.
    */
    'reopenStatus'?: string;
    /**
    * Gets or sets the jira reopen type of the issue.
    */
    'reopenStatusJira'?: JiraIntegrationInfoModel.ReopenStatusJiraEnum;
    'reporter'?: string;
    'type'?: JiraIntegrationInfoModel.TypeEnum;
    'url': string;
    'usernameOrEmail': string;
    'webhookUrl'?: string;
    /**
    * Gets or sets type of the jira template.
    */
    'templateType'?: JiraIntegrationInfoModel.TemplateTypeEnum;
    /**
    * Gets or sets type of the jira epic name
    */
    'epicName'?: string;
    /**
    * Gets or sets type of the jira epic name custom field name
    */
    'epicNameCustomFieldName'?: string;
    /**
    * Gets or sets type of the jira epic key
    */
    'epicKey'?: string;
    /**
    * Gets or sets type of the jira epic key custom field name
    */
    'epicKeyCustomFieldName'?: string;
    /**
    * Gets or sets type of the jira epic type
    */
    'epicSelectionType'?: JiraIntegrationInfoModel.EpicSelectionTypeEnum;
    /**
    * Gets or sets the account ID.
    */
    'accountID'?: string;
    /**
    * Gets or sets the Custom Fields.
    */
    'customFields'?: Array<NotificationIntegrationCustomFieldModel>;
    /**
    * Gets the generic error message.
    */
    'genericErrorMessage'?: string;
    /**
    * Gets or sets the request identifier.
    */
    'identifier'?: string;
    /**
    * Gets or sets the {Invicti.Cloud.Core.Models.ScanNotificationIntegration} name.
    */
    'name'?: string;
    'integrationWizardResultModel'?: IntegrationWizardResultModel;
    /**
    * Gets or sets the type of the issue.
    */
    'resolvedStatus'?: string;
    /**
    * Gets the test message body.
    */
    'testMessageBody'?: string;
    /**
    * Gets the test message title.
    */
    'testMessageTitle'?: string;
    /**
    * Gets or sets the title format.
    */
    'titleFormat': string;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace JiraIntegrationInfoModel {
    enum ReopenStatusJiraEnum {
        ToDo,
        InProgress
    }
    enum TypeEnum {
        Jira,
        GitHub,
        Tfs,
        FogBugz,
        ServiceNow,
        Slack,
        GitLab,
        Bitbucket,
        Unfuddle,
        Zapier,
        AzureDevOps,
        Redmine,
        Bugzilla,
        Kafka,
        PagerDuty,
        MicrosoftTeams,
        Clubhouse,
        Trello,
        Asana,
        Webhook,
        Kenna,
        Freshservice,
        YouTrack,
        NetsparkerEnterprise,
        Splunk,
        Mattermost,
        Hashicorp,
        PivotalTracker,
        CyberArk
    }
    enum TemplateTypeEnum {
        Standard,
        Detailed
    }
    enum EpicSelectionTypeEnum {
        None,
        EpicName,
        EpicKey
    }
}
