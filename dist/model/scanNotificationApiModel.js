"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanNotificationApiModel = void 0;
/**
* Represents a model for carrying out scan notification data
*/
class ScanNotificationApiModel {
    static getAttributeTypeMap() {
        return ScanNotificationApiModel.attributeTypeMap;
    }
}
exports.ScanNotificationApiModel = ScanNotificationApiModel;
ScanNotificationApiModel.discriminator = undefined;
ScanNotificationApiModel.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "Id",
        "type": "string"
    },
    {
        "name": "priority",
        "baseName": "Priority",
        "type": "number"
    },
    {
        "name": "recipients",
        "baseName": "Recipients",
        "type": "ScanNotificationRecipientApiModel"
    },
    {
        "name": "websiteGroupName",
        "baseName": "WebsiteGroupName",
        "type": "string"
    },
    {
        "name": "websiteRootUrl",
        "baseName": "WebsiteRootUrl",
        "type": "string"
    },
    {
        "name": "certainty",
        "baseName": "Certainty",
        "type": "number"
    },
    {
        "name": "disabled",
        "baseName": "Disabled",
        "type": "boolean"
    },
    {
        "name": "scanTaskGroupId",
        "baseName": "ScanTaskGroupId",
        "type": "string"
    },
    {
        "name": "event",
        "baseName": "Event",
        "type": "ScanNotificationApiModel.EventEnum"
    },
    {
        "name": "isConfirmed",
        "baseName": "IsConfirmed",
        "type": "boolean"
    },
    {
        "name": "severity",
        "baseName": "Severity",
        "type": "ScanNotificationApiModel.SeverityEnum"
    },
    {
        "name": "state",
        "baseName": "State",
        "type": "ScanNotificationApiModel.StateEnum"
    },
    {
        "name": "name",
        "baseName": "Name",
        "type": "string"
    },
    {
        "name": "scope",
        "baseName": "Scope",
        "type": "ScanNotificationApiModel.ScopeEnum"
    }
];
(function (ScanNotificationApiModel) {
    let EventEnum;
    (function (EventEnum) {
        EventEnum[EventEnum["NewScan"] = 'NewScan'] = "NewScan";
        EventEnum[EventEnum["ScanCompleted"] = 'ScanCompleted'] = "ScanCompleted";
        EventEnum[EventEnum["ScanCancelled"] = 'ScanCancelled'] = "ScanCancelled";
        EventEnum[EventEnum["ScanFailed"] = 'ScanFailed'] = "ScanFailed";
        EventEnum[EventEnum["ScheduledScanLaunchFailed"] = 'ScheduledScanLaunchFailed'] = "ScheduledScanLaunchFailed";
        EventEnum[EventEnum["OutOfDateTechnology"] = 'OutOfDateTechnology'] = "OutOfDateTechnology";
    })(EventEnum = ScanNotificationApiModel.EventEnum || (ScanNotificationApiModel.EventEnum = {}));
    let SeverityEnum;
    (function (SeverityEnum) {
        SeverityEnum[SeverityEnum["BestPractice"] = 'BestPractice'] = "BestPractice";
        SeverityEnum[SeverityEnum["Information"] = 'Information'] = "Information";
        SeverityEnum[SeverityEnum["Low"] = 'Low'] = "Low";
        SeverityEnum[SeverityEnum["Medium"] = 'Medium'] = "Medium";
        SeverityEnum[SeverityEnum["High"] = 'High'] = "High";
        SeverityEnum[SeverityEnum["Critical"] = 'Critical'] = "Critical";
    })(SeverityEnum = ScanNotificationApiModel.SeverityEnum || (ScanNotificationApiModel.SeverityEnum = {}));
    let StateEnum;
    (function (StateEnum) {
        StateEnum[StateEnum["NotFound"] = 'NotFound'] = "NotFound";
        StateEnum[StateEnum["Fixed"] = 'Fixed'] = "Fixed";
        StateEnum[StateEnum["NotFixed"] = 'NotFixed'] = "NotFixed";
        StateEnum[StateEnum["New"] = 'New'] = "New";
        StateEnum[StateEnum["Revived"] = 'Revived'] = "Revived";
    })(StateEnum = ScanNotificationApiModel.StateEnum || (ScanNotificationApiModel.StateEnum = {}));
    let ScopeEnum;
    (function (ScopeEnum) {
        ScopeEnum[ScopeEnum["AnyWebsite"] = 'AnyWebsite'] = "AnyWebsite";
        ScopeEnum[ScopeEnum["WebsiteGroup"] = 'WebsiteGroup'] = "WebsiteGroup";
        ScopeEnum[ScopeEnum["Website"] = 'Website'] = "Website";
    })(ScopeEnum = ScanNotificationApiModel.ScopeEnum || (ScanNotificationApiModel.ScopeEnum = {}));
})(ScanNotificationApiModel = exports.ScanNotificationApiModel || (exports.ScanNotificationApiModel = {}));
//# sourceMappingURL=scanNotificationApiModel.js.map