/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ReducedTeamApiViewModel } from './reducedTeamApiViewModel';
import { RoleWebsiteGroupMappingApiViewModel } from './roleWebsiteGroupMappingApiViewModel';
export declare class MemberApiViewModel {
    /**
    * Gets or sets the foreign key reference to the related User instance.
    */
    'id'?: string;
    /**
    * Gets or sets the account identifier.
    */
    'accountId'?: string;
    /**
    * Gets or sets the display name of the user.
    */
    'name'?: string;
    /**
    * Gets or sets the email.
    */
    'email'?: string;
    /**
    * Gets or sets a value indicating whether api access is enabled for user.
    */
    'isApiAccessEnabled'?: boolean;
    /**
    * Gets or sets the phone number.
    */
    'phoneNumber'?: string;
    /**
    * Gets or sets user date format that defines the culturally appropriate format of displaying dates and times.  You can use these values ; dd/MM/yyyy and MM/dd/yyyy. Default : dd/MM/yyyy.
    */
    'dateTimeFormat'?: string;
    /**
    * Gets or sets the user\'s time zone.  You can check out following endpoint to see all of time zones. Api endpoint : /api/1.0/teams/gettimezones. Default :  GMT Standard Time.
    */
    'timezoneId'?: string;
    /**
    * Gets or sets the state of the user.
    */
    'state'?: MemberApiViewModel.StateEnum;
    /**
    * Gets or sets the allowed site limit.
    */
    'allowedWebsiteLimit'?: number;
    'isTwoFactorAuthenticationEnabled'?: boolean;
    /**
    * Gets or sets the alternative login email.
    */
    'alternateLoginEmail'?: string;
    /**
    * User direct roles
    */
    'roleWebsiteGroupMappings'?: Array<RoleWebsiteGroupMappingApiViewModel>;
    /**
    * User Teams
    */
    'teams'?: Array<ReducedTeamApiViewModel>;
    /**
    * Is Alternate Login Email
    */
    'isAlternateLoginEmail'?: boolean;
    /**
    * Gets or sets a value indicating whether this user is enforced for SSO.
    */
    'onlySsoLogin'?: boolean;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace MemberApiViewModel {
    enum StateEnum {
        Enabled,
        Disabled
    }
}
