/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http from 'http';
import { TechnologyListApiResult } from '../model/technologyListApiResult';
import { Authentication, Interceptor } from '../model/models';
export declare enum TechnologiesApiApiKeys {
}
export declare class TechnologiesApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: TechnologiesApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Gets the list of technologies that currently in use.
     * @param webSiteName The website\&#39;s name.
     * @param technologyName The technology\&#39;s display name.
     * @param page The page size.
     * @param pageSize The page size. Page size can be any value between 1 and 200.
     */
    technologiesList(webSiteName?: string, technologyName?: string, page?: number, pageSize?: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: TechnologyListApiResult;
    }>;
    /**
     *
     * @summary Gets the list of out-of-date technologies that currently in use.
     * @param webSiteName The website\&#39;s name.
     * @param technologyName The technology\&#39;s display name.
     * @param page The page size.
     * @param pageSize The page size. Page size can be any value between 1 and 200.
     */
    technologiesOutofdateTechnologies(webSiteName?: string, technologyName?: string, page?: number, pageSize?: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: TechnologyListApiResult;
    }>;
}
