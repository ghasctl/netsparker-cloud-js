/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http from 'http';
import { DiscoveryServiceListApiResult } from '../model/discoveryServiceListApiResult';
import { DiscoverySettingsApiModel } from '../model/discoverySettingsApiModel';
import { ExcludeFilter } from '../model/excludeFilter';
import { Authentication, Interceptor } from '../model/models';
export declare enum DiscoveryApiApiKeys {
}
export declare class DiscoveryApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: DiscoveryApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Returns exclude operation result.  This operation note override existing data, append to existing data.  If you want to override please use update-settings endpoint.
     * @param model The exclude filter model.
     */
    discoveryExclude(model: ExcludeFilter, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     *
     * @summary Returns the all discovery services in the csv format as a downloadable file.
     * @param csvSeparator The csv separator. Default comma (,)
     */
    discoveryExport(csvSeparator?: 'Comma' | 'Semicolon' | 'Pipe' | 'Tab', options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     *
     * @summary Ignores discovery service with given service ids.
     * @param serviceIds
     */
    discoveryIgnore(serviceIds: Array<string>, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: string;
    }>;
    /**
     *
     * @summary Ignores discovery services for selected filters.
     * @param authority The authority.
     * @param ipAddress The ip address
     * @param secondLevelDomain The second level domain.
     * @param topLevelDomain The top level domain.
     * @param organizationName The organization name.
     * @param distance The distance.
     * @param registeredDomain The registered domain.
     */
    discoveryIgnoreByFilter(authority?: string, ipAddress?: string, secondLevelDomain?: string, topLevelDomain?: string, organizationName?: string, distance?: number, registeredDomain?: boolean, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: string;
    }>;
    /**
     *
     * @summary Gets the list discovery services.
     * @param page The page size.
     * @param pageSize The page size. Page size can be any value between 1 and 200.
     */
    discoveryList(page?: number, pageSize?: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: DiscoveryServiceListApiResult;
    }>;
    /**
     *
     * @summary Gets the list discovery services with filter.
     * @param authority The authority.
     * @param ipAddress The ip address
     * @param secondLevelDomain The second level domain.
     * @param topLevelDomain The top level domain.
     * @param organizationName The organization name.
     * @param distance The distance.
     * @param registeredDomain The registered domain.
     * @param status The status. Default value New
     * @param page The page size.
     * @param pageSize The page size. Page size can be any value between 1 and 200.
     */
    discoveryListByFilter(authority?: string, ipAddress?: string, secondLevelDomain?: string, topLevelDomain?: string, organizationName?: string, distance?: number, registeredDomain?: boolean, status?: 'New' | 'Ignored' | 'Created', page?: number, pageSize?: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: DiscoveryServiceListApiResult;
    }>;
    /**
     *
     * @summary Gets the discovery settings.
     */
    discoverySettings(options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: DiscoverySettingsApiModel;
    }>;
    /**
     *
     * @summary Updates discovery settings.
     * @param model
     */
    discoveryUpdateSettings(model: DiscoverySettingsApiModel, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: DiscoverySettingsApiModel;
    }>;
}
