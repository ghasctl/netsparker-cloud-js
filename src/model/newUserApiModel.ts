/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a model for carrying out user data.
*/
export class NewUserApiModel {
    /**
    * Gets or sets a value indicating whether this user is enforced for SSO.
    */
    'onlySsoLogin'?: boolean;
    /**
    * Gets or sets a value indicating whether the Password will be generate automatically by system. If password is created as automatic you haven\'t to enter the Password and ConfirmPassword.
    */
    'autoGeneratePassword'?: boolean;
    /**
    * Gets or sets the password.
    */
    'password'?: string;
    /**
    * Gets or sets a value indicating whether the notification will send after user is created.
    */
    'sendNotification'?: boolean;
    /**
    * Gets or sets the phone number.
    */
    'phoneNumber'?: string;
    /**
    * Gets or sets the account\'s permissions as comma separated. You can use following permissions : AccountAdministrator,  ManageWebsites
    */
    'accountPermissions'?: string;
    /**
    * Gets or sets the user\'s time zone.  You can check out following endpoint to see all of time zones. Api endpoint : /api/1.0/teams/gettimezones. Default :  GMT Standard Time.
    */
    'timezoneId': string;
    /**
    * Gets or sets the groups as comma separated.While creating a member, if he got administrator permissions no need to enter a website group otherwise it\'s required.
    */
    'websiteGroups'?: string;
    /**
    * Gets or sets website group name(s) as a string array. If the website group names field has a value, the website groups property is not applied. While creating a member, if he got administrator permissions no need to enter a website group otherwise it\'s required.
    */
    'websiteGroupNames'?: Array<string>;
    /**
    * Gets or sets the scan\'s permissions as comma separated.You can use following permissions : StartScans, ViewScanReports,  ManageIssues, ManageIssuesAsRestricted
    */
    'scanPermissions'?: string;
    /**
    * Gets or sets user date format that defines the culturally appropriate format of displaying dates and times.  You can use these values ; dd/MM/yyyy and MM/dd/yyyy. Default : dd/MM/yyyy.
    */
    'dateTimeFormat': string;
    /**
    * Gets or sets the email.
    */
    'email': string;
    /**
    * If your SSO configuration settings and the use alternate login email option are active, you can use this feature.  Alternative login email is used for mails with extensions such as ex: test@subdomain.onmicrosoft.com.  When this option is active, view the alternative mail field that you can enter in Team Management&gt; Edit and New pages.  When you fill in this field, verification is made with this e-mail address for SSO login.
    */
    'alternateLoginEmail'?: string;
    /**
    * Gets or sets the display name of the user.
    */
    'name': string;
    /**
    * Gets or sets the confirmation password.
    */
    'confirmPassword'?: string;
    /**
    * Gets or sets a value indicating whether api access is enabled for user.
    */
    'isApiAccessEnabled'?: boolean;
    /**
    * Gets or sets the allowed site limit.
    */
    'allowedWebsiteLimit'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "onlySsoLogin",
            "baseName": "OnlySsoLogin",
            "type": "boolean"
        },
        {
            "name": "autoGeneratePassword",
            "baseName": "AutoGeneratePassword",
            "type": "boolean"
        },
        {
            "name": "password",
            "baseName": "Password",
            "type": "string"
        },
        {
            "name": "sendNotification",
            "baseName": "SendNotification",
            "type": "boolean"
        },
        {
            "name": "phoneNumber",
            "baseName": "PhoneNumber",
            "type": "string"
        },
        {
            "name": "accountPermissions",
            "baseName": "AccountPermissions",
            "type": "string"
        },
        {
            "name": "timezoneId",
            "baseName": "TimezoneId",
            "type": "string"
        },
        {
            "name": "websiteGroups",
            "baseName": "WebsiteGroups",
            "type": "string"
        },
        {
            "name": "websiteGroupNames",
            "baseName": "WebsiteGroupNames",
            "type": "Array<string>"
        },
        {
            "name": "scanPermissions",
            "baseName": "ScanPermissions",
            "type": "string"
        },
        {
            "name": "dateTimeFormat",
            "baseName": "DateTimeFormat",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "alternateLoginEmail",
            "baseName": "AlternateLoginEmail",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "confirmPassword",
            "baseName": "ConfirmPassword",
            "type": "string"
        },
        {
            "name": "isApiAccessEnabled",
            "baseName": "IsApiAccessEnabled",
            "type": "boolean"
        },
        {
            "name": "allowedWebsiteLimit",
            "baseName": "AllowedWebsiteLimit",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return NewUserApiModel.attributeTypeMap;
    }
}

