/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a model for carrying out custom HTTP header settings.
*/
export class CustomHttpHeaderSetting {
    /**
    * Gets or sets a value indicating how a parameter should be attacked.
    */
    'attackMode'?: CustomHttpHeaderSetting.AttackModeEnum;
    /**
    * Gets or sets a value indicating whether this is enabled.
    */
    'enabled'?: boolean;
    /**
    * Gets or sets the name.
    */
    'name': string;
    /**
    * Gets or sets the value.
    */
    'value'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attackMode",
            "baseName": "AttackMode",
            "type": "CustomHttpHeaderSetting.AttackModeEnum"
        },
        {
            "name": "enabled",
            "baseName": "Enabled",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "value",
            "baseName": "Value",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CustomHttpHeaderSetting.attributeTypeMap;
    }
}

export namespace CustomHttpHeaderSetting {
    export enum AttackModeEnum {
        None = <any> 'None',
        Optimized = <any> 'Optimized',
        Full = <any> 'Full'
    }
}
