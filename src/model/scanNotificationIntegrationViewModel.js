"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
* The scan notification integration view model.
*/
class ScanNotificationIntegrationViewModel {
    static getAttributeTypeMap() {
        return ScanNotificationIntegrationViewModel.attributeTypeMap;
    }
}
ScanNotificationIntegrationViewModel.discriminator = undefined;
ScanNotificationIntegrationViewModel.attributeTypeMap = [
    {
        "name": "asanaInfo",
        "baseName": "AsanaInfo",
        "type": "AsanaIntegrationInfoModel"
    },
    {
        "name": "azureDevopsInfo",
        "baseName": "AzureDevopsInfo",
        "type": "AzureDevOpsIntegrationInfoModel"
    },
    {
        "name": "bitbucketInfo",
        "baseName": "BitbucketInfo",
        "type": "BitbucketIntegrationInfoModel"
    },
    {
        "name": "bugzilla",
        "baseName": "Bugzilla",
        "type": "BugzillaIntegrationInfoModel"
    },
    {
        "name": "category",
        "baseName": "Category",
        "type": "ScanNotificationIntegrationViewModel.CategoryEnum"
    },
    {
        "name": "clubhouseInfo",
        "baseName": "ClubhouseInfo",
        "type": "ClubhouseIntegrationInfoModel"
    },
    {
        "name": "pivotalTrackerInfo",
        "baseName": "PivotalTrackerInfo",
        "type": "PivotalTrackerIntegrationInfoModel"
    },
    {
        "name": "customFields",
        "baseName": "CustomFields",
        "type": "Array<NotificationIntegrationCustomFieldModel>"
    },
    {
        "name": "fogBugzInfo",
        "baseName": "FogBugzInfo",
        "type": "FogBugzIntegrationInfoModel"
    },
    {
        "name": "gitHubInfo",
        "baseName": "GitHubInfo",
        "type": "GitHubIntegrationInfoModel"
    },
    {
        "name": "gitLabInfo",
        "baseName": "GitLabInfo",
        "type": "GitLabIntegrationInfoModel"
    },
    {
        "name": "id",
        "baseName": "Id",
        "type": "string"
    },
    {
        "name": "jiraInfo",
        "baseName": "JiraInfo",
        "type": "JiraIntegrationInfoModel"
    },
    {
        "name": "kafkaInfo",
        "baseName": "KafkaInfo",
        "type": "KafkaIntegrationInfoModel"
    },
    {
        "name": "kennaInfo",
        "baseName": "KennaInfo",
        "type": "KennaIntegrationInfoModel"
    },
    {
        "name": "freshserviceInfo",
        "baseName": "FreshserviceInfo",
        "type": "FreshserviceIntegrationInfoModel"
    },
    {
        "name": "youTrackInfo",
        "baseName": "YouTrackInfo",
        "type": "YouTrackIntegrationInfoModel"
    },
    {
        "name": "microsoftTeamsInfo",
        "baseName": "MicrosoftTeamsInfo",
        "type": "MicrosoftTeamsIntegrationInfoModel"
    },
    {
        "name": "name",
        "baseName": "Name",
        "type": "string"
    },
    {
        "name": "notFound",
        "baseName": "NotFound",
        "type": "boolean"
    },
    {
        "name": "pagerDutyInfo",
        "baseName": "PagerDutyInfo",
        "type": "PagerDutyIntegrationInfoModel"
    },
    {
        "name": "redmineInfo",
        "baseName": "RedmineInfo",
        "type": "RedmineIntegrationInfoModel"
    },
    {
        "name": "serviceNowInfo",
        "baseName": "ServiceNowInfo",
        "type": "ServiceNowIntegrationInfoModel"
    },
    {
        "name": "slackInfo",
        "baseName": "SlackInfo",
        "type": "SlackIntegrationInfoModel"
    },
    {
        "name": "mattermostInfo",
        "baseName": "MattermostInfo",
        "type": "MattermostIntegrationInfoModel"
    },
    {
        "name": "tFSInfo",
        "baseName": "TFSInfo",
        "type": "TFSIntegrationInfoModel"
    },
    {
        "name": "trelloInfo",
        "baseName": "TrelloInfo",
        "type": "TrelloIntegrationInfoModel"
    },
    {
        "name": "type",
        "baseName": "Type",
        "type": "ScanNotificationIntegrationViewModel.TypeEnum"
    },
    {
        "name": "unfuddleInfo",
        "baseName": "UnfuddleInfo",
        "type": "UnfuddleIntegrationInfoModel"
    },
    {
        "name": "webhookInfo",
        "baseName": "WebhookInfo",
        "type": "WebhookIntegrationInfoModel"
    },
    {
        "name": "zapierInfo",
        "baseName": "ZapierInfo",
        "type": "ZapierIntegrationInfoModel"
    },
    {
        "name": "vaultInfo",
        "baseName": "VaultInfo",
        "type": "HashicorpVaultIntegrationInfoModel"
    },
    {
        "name": "cyberArkVaultInfo",
        "baseName": "CyberArkVaultInfo",
        "type": "CyberArkVaultIntegrationInfoModel"
    }
];
exports.ScanNotificationIntegrationViewModel = ScanNotificationIntegrationViewModel;
(function (ScanNotificationIntegrationViewModel) {
    let CategoryEnum;
    (function (CategoryEnum) {
        CategoryEnum[CategoryEnum["IssueTrackingSystem"] = 'IssueTrackingSystem'] = "IssueTrackingSystem";
        CategoryEnum[CategoryEnum["TeamMessagingSystem"] = 'TeamMessagingSystem'] = "TeamMessagingSystem";
        CategoryEnum[CategoryEnum["PrivilegedAccessManagement"] = 'PrivilegedAccessManagement'] = "PrivilegedAccessManagement";
    })(CategoryEnum = ScanNotificationIntegrationViewModel.CategoryEnum || (ScanNotificationIntegrationViewModel.CategoryEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum[TypeEnum["Jira"] = 'Jira'] = "Jira";
        TypeEnum[TypeEnum["GitHub"] = 'GitHub'] = "GitHub";
        TypeEnum[TypeEnum["Tfs"] = 'TFS'] = "Tfs";
        TypeEnum[TypeEnum["FogBugz"] = 'FogBugz'] = "FogBugz";
        TypeEnum[TypeEnum["ServiceNow"] = 'ServiceNow'] = "ServiceNow";
        TypeEnum[TypeEnum["Slack"] = 'Slack'] = "Slack";
        TypeEnum[TypeEnum["GitLab"] = 'GitLab'] = "GitLab";
        TypeEnum[TypeEnum["Bitbucket"] = 'Bitbucket'] = "Bitbucket";
        TypeEnum[TypeEnum["Unfuddle"] = 'Unfuddle'] = "Unfuddle";
        TypeEnum[TypeEnum["Zapier"] = 'Zapier'] = "Zapier";
        TypeEnum[TypeEnum["AzureDevOps"] = 'AzureDevOps'] = "AzureDevOps";
        TypeEnum[TypeEnum["Redmine"] = 'Redmine'] = "Redmine";
        TypeEnum[TypeEnum["Bugzilla"] = 'Bugzilla'] = "Bugzilla";
        TypeEnum[TypeEnum["Kafka"] = 'Kafka'] = "Kafka";
        TypeEnum[TypeEnum["PagerDuty"] = 'PagerDuty'] = "PagerDuty";
        TypeEnum[TypeEnum["MicrosoftTeams"] = 'MicrosoftTeams'] = "MicrosoftTeams";
        TypeEnum[TypeEnum["Clubhouse"] = 'Clubhouse'] = "Clubhouse";
        TypeEnum[TypeEnum["Trello"] = 'Trello'] = "Trello";
        TypeEnum[TypeEnum["Asana"] = 'Asana'] = "Asana";
        TypeEnum[TypeEnum["Webhook"] = 'Webhook'] = "Webhook";
        TypeEnum[TypeEnum["Kenna"] = 'Kenna'] = "Kenna";
        TypeEnum[TypeEnum["Freshservice"] = 'Freshservice'] = "Freshservice";
        TypeEnum[TypeEnum["YouTrack"] = 'YouTrack'] = "YouTrack";
        TypeEnum[TypeEnum["NetsparkerEnterprise"] = 'NetsparkerEnterprise'] = "NetsparkerEnterprise";
        TypeEnum[TypeEnum["Splunk"] = 'Splunk'] = "Splunk";
        TypeEnum[TypeEnum["Mattermost"] = 'Mattermost'] = "Mattermost";
        TypeEnum[TypeEnum["Hashicorp"] = 'Hashicorp'] = "Hashicorp";
        TypeEnum[TypeEnum["PivotalTracker"] = 'PivotalTracker'] = "PivotalTracker";
        TypeEnum[TypeEnum["CyberArk"] = 'CyberArk'] = "CyberArk";
    })(TypeEnum = ScanNotificationIntegrationViewModel.TypeEnum || (ScanNotificationIntegrationViewModel.TypeEnum = {}));
})(ScanNotificationIntegrationViewModel = exports.ScanNotificationIntegrationViewModel || (exports.ScanNotificationIntegrationViewModel = {}));
//# sourceMappingURL=scanNotificationIntegrationViewModel.js.map