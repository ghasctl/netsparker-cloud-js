/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ReducedTeamApiViewModel } from './reducedTeamApiViewModel';
import { RoleWebsiteGroupMappingApiViewModel } from './roleWebsiteGroupMappingApiViewModel';

export class MemberApiViewModel {
    /**
    * Gets or sets the foreign key reference to the related User instance.
    */
    'id'?: string;
    /**
    * Gets or sets the account identifier.
    */
    'accountId'?: string;
    /**
    * Gets or sets the display name of the user.
    */
    'name'?: string;
    /**
    * Gets or sets the email.
    */
    'email'?: string;
    /**
    * Gets or sets a value indicating whether api access is enabled for user.
    */
    'isApiAccessEnabled'?: boolean;
    /**
    * Gets or sets the phone number.
    */
    'phoneNumber'?: string;
    /**
    * Gets or sets user date format that defines the culturally appropriate format of displaying dates and times.  You can use these values ; dd/MM/yyyy and MM/dd/yyyy. Default : dd/MM/yyyy.
    */
    'dateTimeFormat'?: string;
    /**
    * Gets or sets the user\'s time zone.  You can check out following endpoint to see all of time zones. Api endpoint : /api/1.0/teams/gettimezones. Default :  GMT Standard Time.
    */
    'timezoneId'?: string;
    /**
    * Gets or sets the state of the user.
    */
    'state'?: MemberApiViewModel.StateEnum;
    /**
    * Gets or sets the allowed site limit.
    */
    'allowedWebsiteLimit'?: number;
    'isTwoFactorAuthenticationEnabled'?: boolean;
    /**
    * Gets or sets the alternative login email.
    */
    'alternateLoginEmail'?: string;
    /**
    * User direct roles
    */
    'roleWebsiteGroupMappings'?: Array<RoleWebsiteGroupMappingApiViewModel>;
    /**
    * User Teams
    */
    'teams'?: Array<ReducedTeamApiViewModel>;
    /**
    * Is Alternate Login Email
    */
    'isAlternateLoginEmail'?: boolean;
    /**
    * Gets or sets a value indicating whether this user is enforced for SSO.
    */
    'onlySsoLogin'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "Id",
            "type": "string"
        },
        {
            "name": "accountId",
            "baseName": "AccountId",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "isApiAccessEnabled",
            "baseName": "IsApiAccessEnabled",
            "type": "boolean"
        },
        {
            "name": "phoneNumber",
            "baseName": "PhoneNumber",
            "type": "string"
        },
        {
            "name": "dateTimeFormat",
            "baseName": "DateTimeFormat",
            "type": "string"
        },
        {
            "name": "timezoneId",
            "baseName": "TimezoneId",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "State",
            "type": "MemberApiViewModel.StateEnum"
        },
        {
            "name": "allowedWebsiteLimit",
            "baseName": "AllowedWebsiteLimit",
            "type": "number"
        },
        {
            "name": "isTwoFactorAuthenticationEnabled",
            "baseName": "IsTwoFactorAuthenticationEnabled",
            "type": "boolean"
        },
        {
            "name": "alternateLoginEmail",
            "baseName": "AlternateLoginEmail",
            "type": "string"
        },
        {
            "name": "roleWebsiteGroupMappings",
            "baseName": "RoleWebsiteGroupMappings",
            "type": "Array<RoleWebsiteGroupMappingApiViewModel>"
        },
        {
            "name": "teams",
            "baseName": "Teams",
            "type": "Array<ReducedTeamApiViewModel>"
        },
        {
            "name": "isAlternateLoginEmail",
            "baseName": "IsAlternateLoginEmail",
            "type": "boolean"
        },
        {
            "name": "onlySsoLogin",
            "baseName": "OnlySsoLogin",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return MemberApiViewModel.attributeTypeMap;
    }
}

export namespace MemberApiViewModel {
    export enum StateEnum {
        Enabled = <any> 'Enabled',
        Disabled = <any> 'Disabled'
    }
}
