/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AsanaIntegrationInfoModel } from './asanaIntegrationInfoModel';
import { AzureDevOpsIntegrationInfoModel } from './azureDevOpsIntegrationInfoModel';
import { BitbucketIntegrationInfoModel } from './bitbucketIntegrationInfoModel';
import { BugzillaIntegrationInfoModel } from './bugzillaIntegrationInfoModel';
import { ClubhouseIntegrationInfoModel } from './clubhouseIntegrationInfoModel';
import { CyberArkVaultIntegrationInfoModel } from './cyberArkVaultIntegrationInfoModel';
import { FogBugzIntegrationInfoModel } from './fogBugzIntegrationInfoModel';
import { FreshserviceIntegrationInfoModel } from './freshserviceIntegrationInfoModel';
import { GitHubIntegrationInfoModel } from './gitHubIntegrationInfoModel';
import { GitLabIntegrationInfoModel } from './gitLabIntegrationInfoModel';
import { HashicorpVaultIntegrationInfoModel } from './hashicorpVaultIntegrationInfoModel';
import { JiraIntegrationInfoModel } from './jiraIntegrationInfoModel';
import { KafkaIntegrationInfoModel } from './kafkaIntegrationInfoModel';
import { KennaIntegrationInfoModel } from './kennaIntegrationInfoModel';
import { MattermostIntegrationInfoModel } from './mattermostIntegrationInfoModel';
import { MicrosoftTeamsIntegrationInfoModel } from './microsoftTeamsIntegrationInfoModel';
import { NotificationIntegrationCustomFieldModel } from './notificationIntegrationCustomFieldModel';
import { PagerDutyIntegrationInfoModel } from './pagerDutyIntegrationInfoModel';
import { PivotalTrackerIntegrationInfoModel } from './pivotalTrackerIntegrationInfoModel';
import { RedmineIntegrationInfoModel } from './redmineIntegrationInfoModel';
import { ServiceNowIntegrationInfoModel } from './serviceNowIntegrationInfoModel';
import { SlackIntegrationInfoModel } from './slackIntegrationInfoModel';
import { TFSIntegrationInfoModel } from './tFSIntegrationInfoModel';
import { TrelloIntegrationInfoModel } from './trelloIntegrationInfoModel';
import { UnfuddleIntegrationInfoModel } from './unfuddleIntegrationInfoModel';
import { WebhookIntegrationInfoModel } from './webhookIntegrationInfoModel';
import { YouTrackIntegrationInfoModel } from './youTrackIntegrationInfoModel';
import { ZapierIntegrationInfoModel } from './zapierIntegrationInfoModel';

/**
* The scan notification integration view model.
*/
export class ScanNotificationIntegrationViewModel {
    'asanaInfo'?: AsanaIntegrationInfoModel;
    'azureDevopsInfo'?: AzureDevOpsIntegrationInfoModel;
    'bitbucketInfo'?: BitbucketIntegrationInfoModel;
    'bugzilla'?: BugzillaIntegrationInfoModel;
    /**
    * Gets the category.
    */
    'category'?: ScanNotificationIntegrationViewModel.CategoryEnum;
    'clubhouseInfo'?: ClubhouseIntegrationInfoModel;
    'pivotalTrackerInfo'?: PivotalTrackerIntegrationInfoModel;
    /**
    * Gets or sets the Custom Fields.
    */
    'customFields'?: Array<NotificationIntegrationCustomFieldModel>;
    'fogBugzInfo'?: FogBugzIntegrationInfoModel;
    'gitHubInfo'?: GitHubIntegrationInfoModel;
    'gitLabInfo'?: GitLabIntegrationInfoModel;
    /**
    * Gets or sets the identifier.
    */
    'id'?: string;
    'jiraInfo'?: JiraIntegrationInfoModel;
    'kafkaInfo'?: KafkaIntegrationInfoModel;
    'kennaInfo'?: KennaIntegrationInfoModel;
    'freshserviceInfo'?: FreshserviceIntegrationInfoModel;
    'youTrackInfo'?: YouTrackIntegrationInfoModel;
    'microsoftTeamsInfo'?: MicrosoftTeamsIntegrationInfoModel;
    /**
    * Gets or sets the name.
    */
    'name': string;
    /**
    * Gets or sets a value indicating whether the notification integration not found in case of an update.
    */
    'notFound'?: boolean;
    'pagerDutyInfo'?: PagerDutyIntegrationInfoModel;
    'redmineInfo'?: RedmineIntegrationInfoModel;
    'serviceNowInfo'?: ServiceNowIntegrationInfoModel;
    'slackInfo'?: SlackIntegrationInfoModel;
    'mattermostInfo'?: MattermostIntegrationInfoModel;
    'tFSInfo'?: TFSIntegrationInfoModel;
    'trelloInfo'?: TrelloIntegrationInfoModel;
    /**
    * Gets or sets the type.
    */
    'type'?: ScanNotificationIntegrationViewModel.TypeEnum;
    'unfuddleInfo'?: UnfuddleIntegrationInfoModel;
    'webhookInfo'?: WebhookIntegrationInfoModel;
    'zapierInfo'?: ZapierIntegrationInfoModel;
    'vaultInfo'?: HashicorpVaultIntegrationInfoModel;
    'cyberArkVaultInfo'?: CyberArkVaultIntegrationInfoModel;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "asanaInfo",
            "baseName": "AsanaInfo",
            "type": "AsanaIntegrationInfoModel"
        },
        {
            "name": "azureDevopsInfo",
            "baseName": "AzureDevopsInfo",
            "type": "AzureDevOpsIntegrationInfoModel"
        },
        {
            "name": "bitbucketInfo",
            "baseName": "BitbucketInfo",
            "type": "BitbucketIntegrationInfoModel"
        },
        {
            "name": "bugzilla",
            "baseName": "Bugzilla",
            "type": "BugzillaIntegrationInfoModel"
        },
        {
            "name": "category",
            "baseName": "Category",
            "type": "ScanNotificationIntegrationViewModel.CategoryEnum"
        },
        {
            "name": "clubhouseInfo",
            "baseName": "ClubhouseInfo",
            "type": "ClubhouseIntegrationInfoModel"
        },
        {
            "name": "pivotalTrackerInfo",
            "baseName": "PivotalTrackerInfo",
            "type": "PivotalTrackerIntegrationInfoModel"
        },
        {
            "name": "customFields",
            "baseName": "CustomFields",
            "type": "Array<NotificationIntegrationCustomFieldModel>"
        },
        {
            "name": "fogBugzInfo",
            "baseName": "FogBugzInfo",
            "type": "FogBugzIntegrationInfoModel"
        },
        {
            "name": "gitHubInfo",
            "baseName": "GitHubInfo",
            "type": "GitHubIntegrationInfoModel"
        },
        {
            "name": "gitLabInfo",
            "baseName": "GitLabInfo",
            "type": "GitLabIntegrationInfoModel"
        },
        {
            "name": "id",
            "baseName": "Id",
            "type": "string"
        },
        {
            "name": "jiraInfo",
            "baseName": "JiraInfo",
            "type": "JiraIntegrationInfoModel"
        },
        {
            "name": "kafkaInfo",
            "baseName": "KafkaInfo",
            "type": "KafkaIntegrationInfoModel"
        },
        {
            "name": "kennaInfo",
            "baseName": "KennaInfo",
            "type": "KennaIntegrationInfoModel"
        },
        {
            "name": "freshserviceInfo",
            "baseName": "FreshserviceInfo",
            "type": "FreshserviceIntegrationInfoModel"
        },
        {
            "name": "youTrackInfo",
            "baseName": "YouTrackInfo",
            "type": "YouTrackIntegrationInfoModel"
        },
        {
            "name": "microsoftTeamsInfo",
            "baseName": "MicrosoftTeamsInfo",
            "type": "MicrosoftTeamsIntegrationInfoModel"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "notFound",
            "baseName": "NotFound",
            "type": "boolean"
        },
        {
            "name": "pagerDutyInfo",
            "baseName": "PagerDutyInfo",
            "type": "PagerDutyIntegrationInfoModel"
        },
        {
            "name": "redmineInfo",
            "baseName": "RedmineInfo",
            "type": "RedmineIntegrationInfoModel"
        },
        {
            "name": "serviceNowInfo",
            "baseName": "ServiceNowInfo",
            "type": "ServiceNowIntegrationInfoModel"
        },
        {
            "name": "slackInfo",
            "baseName": "SlackInfo",
            "type": "SlackIntegrationInfoModel"
        },
        {
            "name": "mattermostInfo",
            "baseName": "MattermostInfo",
            "type": "MattermostIntegrationInfoModel"
        },
        {
            "name": "tFSInfo",
            "baseName": "TFSInfo",
            "type": "TFSIntegrationInfoModel"
        },
        {
            "name": "trelloInfo",
            "baseName": "TrelloInfo",
            "type": "TrelloIntegrationInfoModel"
        },
        {
            "name": "type",
            "baseName": "Type",
            "type": "ScanNotificationIntegrationViewModel.TypeEnum"
        },
        {
            "name": "unfuddleInfo",
            "baseName": "UnfuddleInfo",
            "type": "UnfuddleIntegrationInfoModel"
        },
        {
            "name": "webhookInfo",
            "baseName": "WebhookInfo",
            "type": "WebhookIntegrationInfoModel"
        },
        {
            "name": "zapierInfo",
            "baseName": "ZapierInfo",
            "type": "ZapierIntegrationInfoModel"
        },
        {
            "name": "vaultInfo",
            "baseName": "VaultInfo",
            "type": "HashicorpVaultIntegrationInfoModel"
        },
        {
            "name": "cyberArkVaultInfo",
            "baseName": "CyberArkVaultInfo",
            "type": "CyberArkVaultIntegrationInfoModel"
        }    ];

    static getAttributeTypeMap() {
        return ScanNotificationIntegrationViewModel.attributeTypeMap;
    }
}

export namespace ScanNotificationIntegrationViewModel {
    export enum CategoryEnum {
        IssueTrackingSystem = <any> 'IssueTrackingSystem',
        TeamMessagingSystem = <any> 'TeamMessagingSystem',
        PrivilegedAccessManagement = <any> 'PrivilegedAccessManagement'
    }
    export enum TypeEnum {
        Jira = <any> 'Jira',
        GitHub = <any> 'GitHub',
        Tfs = <any> 'TFS',
        FogBugz = <any> 'FogBugz',
        ServiceNow = <any> 'ServiceNow',
        Slack = <any> 'Slack',
        GitLab = <any> 'GitLab',
        Bitbucket = <any> 'Bitbucket',
        Unfuddle = <any> 'Unfuddle',
        Zapier = <any> 'Zapier',
        AzureDevOps = <any> 'AzureDevOps',
        Redmine = <any> 'Redmine',
        Bugzilla = <any> 'Bugzilla',
        Kafka = <any> 'Kafka',
        PagerDuty = <any> 'PagerDuty',
        MicrosoftTeams = <any> 'MicrosoftTeams',
        Clubhouse = <any> 'Clubhouse',
        Trello = <any> 'Trello',
        Asana = <any> 'Asana',
        Webhook = <any> 'Webhook',
        Kenna = <any> 'Kenna',
        Freshservice = <any> 'Freshservice',
        YouTrack = <any> 'YouTrack',
        NetsparkerEnterprise = <any> 'NetsparkerEnterprise',
        Splunk = <any> 'Splunk',
        Mattermost = <any> 'Mattermost',
        Hashicorp = <any> 'Hashicorp',
        PivotalTracker = <any> 'PivotalTracker',
        CyberArk = <any> 'CyberArk'
    }
}
