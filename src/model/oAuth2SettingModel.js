"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
* Represents oauth2 model.
*/
class OAuth2SettingModel {
    static getAttributeTypeMap() {
        return OAuth2SettingModel.attributeTypeMap;
    }
}
OAuth2SettingModel.discriminator = undefined;
OAuth2SettingModel.attributeTypeMap = [
    {
        "name": "enabled",
        "baseName": "Enabled",
        "type": "boolean"
    },
    {
        "name": "selectedFlowType",
        "baseName": "SelectedFlowType",
        "type": "OAuth2SettingModel.SelectedFlowTypeEnum"
    },
    {
        "name": "selectedAuthenticationType",
        "baseName": "SelectedAuthenticationType",
        "type": "OAuth2SettingModel.SelectedAuthenticationTypeEnum"
    },
    {
        "name": "flowTypes",
        "baseName": "FlowTypes",
        "type": "Array<SelectOptionModel>"
    },
    {
        "name": "authentications",
        "baseName": "Authentications",
        "type": "Array<SelectOptionModel>"
    },
    {
        "name": "accessTokenEndpoint",
        "baseName": "AccessTokenEndpoint",
        "type": "OAuth2SettingEndPointModel"
    },
    {
        "name": "authorizationCodeEndpoint",
        "baseName": "AuthorizationCodeEndpoint",
        "type": "OAuth2SettingEndPointModel"
    },
    {
        "name": "accessTokenTable",
        "baseName": "AccessTokenTable",
        "type": "AccessTokenTableModel"
    },
    {
        "name": "authorizationCodeTable",
        "baseName": "AuthorizationCodeTable",
        "type": "AuthorizationCodeTableModel"
    },
    {
        "name": "responseFieldForm",
        "baseName": "ResponseFieldForm",
        "type": "ResponseFields"
    },
    {
        "name": "threeLegged",
        "baseName": "ThreeLegged",
        "type": "ThreeLeggedFields"
    }
];
exports.OAuth2SettingModel = OAuth2SettingModel;
(function (OAuth2SettingModel) {
    let SelectedFlowTypeEnum;
    (function (SelectedFlowTypeEnum) {
        SelectedFlowTypeEnum[SelectedFlowTypeEnum["AuthorizationCode"] = 'AuthorizationCode'] = "AuthorizationCode";
        SelectedFlowTypeEnum[SelectedFlowTypeEnum["Implicit"] = 'Implicit'] = "Implicit";
        SelectedFlowTypeEnum[SelectedFlowTypeEnum["ResourceOwnerPasswordCredentials"] = 'ResourceOwnerPasswordCredentials'] = "ResourceOwnerPasswordCredentials";
        SelectedFlowTypeEnum[SelectedFlowTypeEnum["ClientCredentials"] = 'ClientCredentials'] = "ClientCredentials";
        SelectedFlowTypeEnum[SelectedFlowTypeEnum["Custom"] = 'Custom'] = "Custom";
    })(SelectedFlowTypeEnum = OAuth2SettingModel.SelectedFlowTypeEnum || (OAuth2SettingModel.SelectedFlowTypeEnum = {}));
    let SelectedAuthenticationTypeEnum;
    (function (SelectedAuthenticationTypeEnum) {
        SelectedAuthenticationTypeEnum[SelectedAuthenticationTypeEnum["None"] = 'None'] = "None";
        SelectedAuthenticationTypeEnum[SelectedAuthenticationTypeEnum["Form"] = 'Form'] = "Form";
        SelectedAuthenticationTypeEnum[SelectedAuthenticationTypeEnum["Basic"] = 'Basic'] = "Basic";
    })(SelectedAuthenticationTypeEnum = OAuth2SettingModel.SelectedAuthenticationTypeEnum || (OAuth2SettingModel.SelectedAuthenticationTypeEnum = {}));
})(OAuth2SettingModel = exports.OAuth2SettingModel || (exports.OAuth2SettingModel = {}));
//# sourceMappingURL=oAuth2SettingModel.js.map