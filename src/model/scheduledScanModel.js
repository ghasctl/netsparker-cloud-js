"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledScanModel = void 0;
/**
* Represents a model that carries out scheduled scan data.
*/
class ScheduledScanModel {
    static getAttributeTypeMap() {
        return ScheduledScanModel.attributeTypeMap;
    }
}
exports.ScheduledScanModel = ScheduledScanModel;
ScheduledScanModel.discriminator = undefined;
ScheduledScanModel.attributeTypeMap = [
    {
        "name": "lastExecutedScanTaskId",
        "baseName": "LastExecutedScanTaskId",
        "type": "string"
    },
    {
        "name": "lastExecutionError",
        "baseName": "LastExecutionError",
        "type": "number"
    },
    {
        "name": "lastExecutionStatus",
        "baseName": "LastExecutionStatus",
        "type": "ScheduledScanModel.LastExecutionStatusEnum"
    },
    {
        "name": "timeWindow",
        "baseName": "TimeWindow",
        "type": "ScanTimeWindowModel"
    },
    {
        "name": "id",
        "baseName": "Id",
        "type": "string"
    },
    {
        "name": "occurencesCount",
        "baseName": "OccurencesCount",
        "type": "number"
    },
    {
        "name": "disabled",
        "baseName": "Disabled",
        "type": "boolean"
    },
    {
        "name": "enableScheduling",
        "baseName": "EnableScheduling",
        "type": "boolean"
    },
    {
        "name": "name",
        "baseName": "Name",
        "type": "string"
    },
    {
        "name": "nextExecutionTime",
        "baseName": "NextExecutionTime",
        "type": "string"
    },
    {
        "name": "scanGroupId",
        "baseName": "ScanGroupId",
        "type": "string"
    },
    {
        "name": "scanType",
        "baseName": "ScanType",
        "type": "ScheduledScanModel.ScanTypeEnum"
    },
    {
        "name": "scheduleRunType",
        "baseName": "ScheduleRunType",
        "type": "ScheduledScanModel.ScheduleRunTypeEnum"
    },
    {
        "name": "customRecurrence",
        "baseName": "CustomRecurrence",
        "type": "ScheduledScanRecurrenceViewModel"
    },
    {
        "name": "customScriptTemplateType",
        "baseName": "CustomScriptTemplateType",
        "type": "ScheduledScanModel.CustomScriptTemplateTypeEnum"
    },
    {
        "name": "isTargetUrlRequired",
        "baseName": "IsTargetUrlRequired",
        "type": "boolean"
    },
    {
        "name": "isGenerateOptimizedCss",
        "baseName": "IsGenerateOptimizedCss",
        "type": "boolean"
    },
    {
        "name": "launchSettingId",
        "baseName": "LaunchSettingId",
        "type": "string"
    },
    {
        "name": "additionalWebsites",
        "baseName": "AdditionalWebsites",
        "type": "AdditionalWebsitesSettingModel"
    },
    {
        "name": "agentGroupId",
        "baseName": "AgentGroupId",
        "type": "string"
    },
    {
        "name": "agentId",
        "baseName": "AgentId",
        "type": "string"
    },
    {
        "name": "basicAuthenticationSetting",
        "baseName": "BasicAuthenticationSetting",
        "type": "BasicAuthenticationSettingModel"
    },
    {
        "name": "canEdit",
        "baseName": "CanEdit",
        "type": "boolean"
    },
    {
        "name": "clientCertificateAuthentication",
        "baseName": "ClientCertificateAuthentication",
        "type": "ClientCertificateAuthenticationViewModel"
    },
    {
        "name": "cookies",
        "baseName": "Cookies",
        "type": "string"
    },
    {
        "name": "comments",
        "baseName": "Comments",
        "type": "string"
    },
    {
        "name": "crawlAndAttack",
        "baseName": "CrawlAndAttack",
        "type": "boolean"
    },
    {
        "name": "createType",
        "baseName": "CreateType",
        "type": "ScheduledScanModel.CreateTypeEnum"
    },
    {
        "name": "authenticationProfileOption",
        "baseName": "AuthenticationProfileOption",
        "type": "string"
    },
    {
        "name": "authenticationProfileName",
        "baseName": "AuthenticationProfileName",
        "type": "string"
    },
    {
        "name": "findAndFollowNewLinks",
        "baseName": "FindAndFollowNewLinks",
        "type": "boolean"
    },
    {
        "name": "formAuthenticationSetting",
        "baseName": "FormAuthenticationSetting",
        "type": "FormAuthenticationSettingModel"
    },
    {
        "name": "headerAuthentication",
        "baseName": "HeaderAuthentication",
        "type": "HeaderAuthenticationModel"
    },
    {
        "name": "shark",
        "baseName": "Shark",
        "type": "SharkModel"
    },
    {
        "name": "importedLinks",
        "baseName": "ImportedLinks",
        "type": "ImportedLinksSetting"
    },
    {
        "name": "isMaxScanDurationEnabled",
        "baseName": "IsMaxScanDurationEnabled",
        "type": "boolean"
    },
    {
        "name": "isPrimary",
        "baseName": "IsPrimary",
        "type": "boolean"
    },
    {
        "name": "isShared",
        "baseName": "IsShared",
        "type": "boolean"
    },
    {
        "name": "maxScanDuration",
        "baseName": "MaxScanDuration",
        "type": "number"
    },
    {
        "name": "policyId",
        "baseName": "PolicyId",
        "type": "string"
    },
    {
        "name": "policyName",
        "baseName": "PolicyName",
        "type": "string"
    },
    {
        "name": "profileId",
        "baseName": "ProfileId",
        "type": "string"
    },
    {
        "name": "profileName",
        "baseName": "ProfileName",
        "type": "string"
    },
    {
        "name": "reportPolicyId",
        "baseName": "ReportPolicyId",
        "type": "string"
    },
    {
        "name": "reportPolicyName",
        "baseName": "ReportPolicyName",
        "type": "string"
    },
    {
        "name": "saveScanProfile",
        "baseName": "SaveScanProfile",
        "type": "boolean"
    },
    {
        "name": "scopeSetting",
        "baseName": "ScopeSetting",
        "type": "ScopeSetting"
    },
    {
        "name": "selectedAgents",
        "baseName": "SelectedAgents",
        "type": "Array<AgentSelectionModel>"
    },
    {
        "name": "selectedScanProfileId",
        "baseName": "SelectedScanProfileId",
        "type": "string"
    },
    {
        "name": "selectedScanProfileName",
        "baseName": "SelectedScanProfileName",
        "type": "string"
    },
    {
        "name": "targetUrl",
        "baseName": "TargetUrl",
        "type": "string"
    },
    {
        "name": "description",
        "baseName": "Description",
        "type": "string"
    },
    {
        "name": "urlRewriteSetting",
        "baseName": "UrlRewriteSetting",
        "type": "UrlRewriteSetting"
    },
    {
        "name": "preRequestScriptSetting",
        "baseName": "PreRequestScriptSetting",
        "type": "PreRequestScriptSettingModel"
    },
    {
        "name": "userId",
        "baseName": "UserId",
        "type": "string"
    },
    {
        "name": "websiteGroupId",
        "baseName": "WebsiteGroupId",
        "type": "string"
    },
    {
        "name": "enablePciScanTask",
        "baseName": "EnablePciScanTask",
        "type": "boolean"
    },
    {
        "name": "oAuth2Setting",
        "baseName": "OAuth2Setting",
        "type": "OAuth2SettingModel"
    }
];
(function (ScheduledScanModel) {
    let LastExecutionStatusEnum;
    (function (LastExecutionStatusEnum) {
        LastExecutionStatusEnum[LastExecutionStatusEnum["Ok"] = 'Ok'] = "Ok";
        LastExecutionStatusEnum[LastExecutionStatusEnum["LicenseError"] = 'LicenseError'] = "LicenseError";
    })(LastExecutionStatusEnum = ScheduledScanModel.LastExecutionStatusEnum || (ScheduledScanModel.LastExecutionStatusEnum = {}));
    let ScanTypeEnum;
    (function (ScanTypeEnum) {
        ScanTypeEnum[ScanTypeEnum["Full"] = 'Full'] = "Full";
        ScanTypeEnum[ScanTypeEnum["Retest"] = 'Retest'] = "Retest";
        ScanTypeEnum[ScanTypeEnum["Incremental"] = 'Incremental'] = "Incremental";
    })(ScanTypeEnum = ScheduledScanModel.ScanTypeEnum || (ScheduledScanModel.ScanTypeEnum = {}));
    let ScheduleRunTypeEnum;
    (function (ScheduleRunTypeEnum) {
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Once"] = 'Once'] = "Once";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Daily"] = 'Daily'] = "Daily";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Weekly"] = 'Weekly'] = "Weekly";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Monthly"] = 'Monthly'] = "Monthly";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Quarterly"] = 'Quarterly'] = "Quarterly";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Biannually"] = 'Biannually'] = "Biannually";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Yearly"] = 'Yearly'] = "Yearly";
        ScheduleRunTypeEnum[ScheduleRunTypeEnum["Custom"] = 'Custom'] = "Custom";
    })(ScheduleRunTypeEnum = ScheduledScanModel.ScheduleRunTypeEnum || (ScheduledScanModel.ScheduleRunTypeEnum = {}));
    let CustomScriptTemplateTypeEnum;
    (function (CustomScriptTemplateTypeEnum) {
        CustomScriptTemplateTypeEnum[CustomScriptTemplateTypeEnum["Default"] = 'Default'] = "Default";
        CustomScriptTemplateTypeEnum[CustomScriptTemplateTypeEnum["SimpleLoginForm"] = 'SimpleLoginForm'] = "SimpleLoginForm";
        CustomScriptTemplateTypeEnum[CustomScriptTemplateTypeEnum["SimpleLoginFormQuery"] = 'SimpleLoginFormQuery'] = "SimpleLoginFormQuery";
        CustomScriptTemplateTypeEnum[CustomScriptTemplateTypeEnum["SimpleLoginFormDelay"] = 'SimpleLoginFormDelay'] = "SimpleLoginFormDelay";
    })(CustomScriptTemplateTypeEnum = ScheduledScanModel.CustomScriptTemplateTypeEnum || (ScheduledScanModel.CustomScriptTemplateTypeEnum = {}));
    let CreateTypeEnum;
    (function (CreateTypeEnum) {
        CreateTypeEnum[CreateTypeEnum["Website"] = 'Website'] = "Website";
        CreateTypeEnum[CreateTypeEnum["WebsiteGroup"] = 'WebsiteGroup'] = "WebsiteGroup";
    })(CreateTypeEnum = ScheduledScanModel.CreateTypeEnum || (ScheduledScanModel.CreateTypeEnum = {}));
})(ScheduledScanModel = exports.ScheduledScanModel || (exports.ScheduledScanModel = {}));
//# sourceMappingURL=scheduledScanModel.js.map