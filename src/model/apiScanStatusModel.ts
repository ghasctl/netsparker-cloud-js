/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a model for carrying out scan status data for API.
*/
export class ApiScanStatusModel {
    /**
    * Gets or sets the completed steps.
    */
    'completedSteps'?: number;
    /**
    * Gets or sets the estimated launch time in minutes for queued scans.
    */
    'estimatedLaunchTime'?: number;
    /**
    * Gets or sets the estimated steps.
    */
    'estimatedSteps'?: number;
    /**
    * Gets or sets the state.
    */
    'state'?: ApiScanStatusModel.StateEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "completedSteps",
            "baseName": "CompletedSteps",
            "type": "number"
        },
        {
            "name": "estimatedLaunchTime",
            "baseName": "EstimatedLaunchTime",
            "type": "number"
        },
        {
            "name": "estimatedSteps",
            "baseName": "EstimatedSteps",
            "type": "number"
        },
        {
            "name": "state",
            "baseName": "State",
            "type": "ApiScanStatusModel.StateEnum"
        }    ];

    static getAttributeTypeMap() {
        return ApiScanStatusModel.attributeTypeMap;
    }
}

export namespace ApiScanStatusModel {
    export enum StateEnum {
        Queued = <any> 'Queued',
        Scanning = <any> 'Scanning',
        Archiving = <any> 'Archiving',
        Complete = <any> 'Complete',
        Failed = <any> 'Failed',
        Cancelled = <any> 'Cancelled',
        Delayed = <any> 'Delayed',
        Pausing = <any> 'Pausing',
        Paused = <any> 'Paused',
        Resuming = <any> 'Resuming'
    }
}
