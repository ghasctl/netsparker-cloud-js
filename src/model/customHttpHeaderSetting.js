"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
* Represents a model for carrying out custom HTTP header settings.
*/
class CustomHttpHeaderSetting {
    static getAttributeTypeMap() {
        return CustomHttpHeaderSetting.attributeTypeMap;
    }
}
CustomHttpHeaderSetting.discriminator = undefined;
CustomHttpHeaderSetting.attributeTypeMap = [
    {
        "name": "attackMode",
        "baseName": "AttackMode",
        "type": "CustomHttpHeaderSetting.AttackModeEnum"
    },
    {
        "name": "enabled",
        "baseName": "Enabled",
        "type": "boolean"
    },
    {
        "name": "name",
        "baseName": "Name",
        "type": "string"
    },
    {
        "name": "value",
        "baseName": "Value",
        "type": "string"
    }
];
exports.CustomHttpHeaderSetting = CustomHttpHeaderSetting;
(function (CustomHttpHeaderSetting) {
    let AttackModeEnum;
    (function (AttackModeEnum) {
        AttackModeEnum[AttackModeEnum["None"] = 'None'] = "None";
        AttackModeEnum[AttackModeEnum["Optimized"] = 'Optimized'] = "Optimized";
        AttackModeEnum[AttackModeEnum["Full"] = 'Full'] = "Full";
    })(AttackModeEnum = CustomHttpHeaderSetting.AttackModeEnum || (CustomHttpHeaderSetting.AttackModeEnum = {}));
})(CustomHttpHeaderSetting = exports.CustomHttpHeaderSetting || (exports.CustomHttpHeaderSetting = {}));
//# sourceMappingURL=customHttpHeaderSetting.js.map