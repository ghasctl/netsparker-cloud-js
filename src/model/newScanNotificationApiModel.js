"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
* Represents a model for carrying out a new scan notification data
*/
class NewScanNotificationApiModel {
    static getAttributeTypeMap() {
        return NewScanNotificationApiModel.attributeTypeMap;
    }
}
NewScanNotificationApiModel.discriminator = undefined;
NewScanNotificationApiModel.attributeTypeMap = [
    {
        "name": "recipients",
        "baseName": "Recipients",
        "type": "NewScanNotificationRecipientApiModel"
    },
    {
        "name": "websiteGroupName",
        "baseName": "WebsiteGroupName",
        "type": "string"
    },
    {
        "name": "websiteRootUrl",
        "baseName": "WebsiteRootUrl",
        "type": "string"
    },
    {
        "name": "certainty",
        "baseName": "Certainty",
        "type": "number"
    },
    {
        "name": "disabled",
        "baseName": "Disabled",
        "type": "boolean"
    },
    {
        "name": "scanTaskGroupId",
        "baseName": "ScanTaskGroupId",
        "type": "string"
    },
    {
        "name": "event",
        "baseName": "Event",
        "type": "NewScanNotificationApiModel.EventEnum"
    },
    {
        "name": "isConfirmed",
        "baseName": "IsConfirmed",
        "type": "boolean"
    },
    {
        "name": "severity",
        "baseName": "Severity",
        "type": "NewScanNotificationApiModel.SeverityEnum"
    },
    {
        "name": "state",
        "baseName": "State",
        "type": "NewScanNotificationApiModel.StateEnum"
    },
    {
        "name": "name",
        "baseName": "Name",
        "type": "string"
    },
    {
        "name": "scope",
        "baseName": "Scope",
        "type": "NewScanNotificationApiModel.ScopeEnum"
    }
];
exports.NewScanNotificationApiModel = NewScanNotificationApiModel;
(function (NewScanNotificationApiModel) {
    let EventEnum;
    (function (EventEnum) {
        EventEnum[EventEnum["NewScan"] = 'NewScan'] = "NewScan";
        EventEnum[EventEnum["ScanCompleted"] = 'ScanCompleted'] = "ScanCompleted";
        EventEnum[EventEnum["ScanCancelled"] = 'ScanCancelled'] = "ScanCancelled";
        EventEnum[EventEnum["ScanFailed"] = 'ScanFailed'] = "ScanFailed";
        EventEnum[EventEnum["ScheduledScanLaunchFailed"] = 'ScheduledScanLaunchFailed'] = "ScheduledScanLaunchFailed";
        EventEnum[EventEnum["OutOfDateTechnology"] = 'OutOfDateTechnology'] = "OutOfDateTechnology";
    })(EventEnum = NewScanNotificationApiModel.EventEnum || (NewScanNotificationApiModel.EventEnum = {}));
    let SeverityEnum;
    (function (SeverityEnum) {
        SeverityEnum[SeverityEnum["BestPractice"] = 'BestPractice'] = "BestPractice";
        SeverityEnum[SeverityEnum["Information"] = 'Information'] = "Information";
        SeverityEnum[SeverityEnum["Low"] = 'Low'] = "Low";
        SeverityEnum[SeverityEnum["Medium"] = 'Medium'] = "Medium";
        SeverityEnum[SeverityEnum["High"] = 'High'] = "High";
        SeverityEnum[SeverityEnum["Critical"] = 'Critical'] = "Critical";
    })(SeverityEnum = NewScanNotificationApiModel.SeverityEnum || (NewScanNotificationApiModel.SeverityEnum = {}));
    let StateEnum;
    (function (StateEnum) {
        StateEnum[StateEnum["NotFound"] = 'NotFound'] = "NotFound";
        StateEnum[StateEnum["Fixed"] = 'Fixed'] = "Fixed";
        StateEnum[StateEnum["NotFixed"] = 'NotFixed'] = "NotFixed";
        StateEnum[StateEnum["New"] = 'New'] = "New";
        StateEnum[StateEnum["Revived"] = 'Revived'] = "Revived";
    })(StateEnum = NewScanNotificationApiModel.StateEnum || (NewScanNotificationApiModel.StateEnum = {}));
    let ScopeEnum;
    (function (ScopeEnum) {
        ScopeEnum[ScopeEnum["AnyWebsite"] = 'AnyWebsite'] = "AnyWebsite";
        ScopeEnum[ScopeEnum["WebsiteGroup"] = 'WebsiteGroup'] = "WebsiteGroup";
        ScopeEnum[ScopeEnum["Website"] = 'Website'] = "Website";
    })(ScopeEnum = NewScanNotificationApiModel.ScopeEnum || (NewScanNotificationApiModel.ScopeEnum = {}));
})(NewScanNotificationApiModel = exports.NewScanNotificationApiModel || (exports.NewScanNotificationApiModel = {}));
//# sourceMappingURL=newScanNotificationApiModel.js.map