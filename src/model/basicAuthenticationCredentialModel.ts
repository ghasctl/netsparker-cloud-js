/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents credentials for Basic, NTML, Kerberos, Digest or Negotiate authentication.
*/
export class BasicAuthenticationCredentialModel {
    /**
    * Gets or sets the type of the authentication.
    */
    'authenticationType'?: BasicAuthenticationCredentialModel.AuthenticationTypeEnum;
    /**
    * Gets or sets the domain for basic authentication.
    */
    'domain'?: string;
    /**
    * Gets or sets the password for basic authentication.
    */
    'password': string;
    /**
    * Gets or sets the URI prefix.
    */
    'uriPrefix': string;
    /**
    * Gets or sets the user name for basic authentication.
    */
    'userName': string;
    /**
    * Gets or sets the URI prefix that not modified by user on client side.
    */
    'originalUriPrefix'?: string;
    /**
    * Gets or sets the user name for basic authentication that not modified by user on client side.
    */
    'originalUserName'?: string;
    /**
    * Gets or sets a value indicating whether the placeholders is replaced with actual credentials.
    */
    'isReplacedCredentials'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "authenticationType",
            "baseName": "AuthenticationType",
            "type": "BasicAuthenticationCredentialModel.AuthenticationTypeEnum"
        },
        {
            "name": "domain",
            "baseName": "Domain",
            "type": "string"
        },
        {
            "name": "password",
            "baseName": "Password",
            "type": "string"
        },
        {
            "name": "uriPrefix",
            "baseName": "UriPrefix",
            "type": "string"
        },
        {
            "name": "userName",
            "baseName": "UserName",
            "type": "string"
        },
        {
            "name": "originalUriPrefix",
            "baseName": "OriginalUriPrefix",
            "type": "string"
        },
        {
            "name": "originalUserName",
            "baseName": "OriginalUserName",
            "type": "string"
        },
        {
            "name": "isReplacedCredentials",
            "baseName": "IsReplacedCredentials",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return BasicAuthenticationCredentialModel.attributeTypeMap;
    }
}

export namespace BasicAuthenticationCredentialModel {
    export enum AuthenticationTypeEnum {
        Basic = <any> 'Basic',
        Ntlm = <any> 'Ntlm',
        Kerberos = <any> 'Kerberos',
        Digest = <any> 'Digest',
        Negotiate = <any> 'Negotiate'
    }
}
