/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Stores the characteristics of a version-related issue type.
*/
export class VersionIssue {
    /**
    * Gets or sets a description of the steps required to exploit this vulnerability type.
    */
    'exploit'?: string;
    /**
    * Gets or sets the external references relating to this vulnerability type.
    */
    'externalReferences'?: string;
    /**
    * Gets or sets a value that identifies the application ordinal in which this vulnerability type first occurred.
    */
    'fromVersionOrdinal'?: number;
    /**
    * Gets or sets a value that identifies the application version in which this vulnerability type first occurred.
    */
    'fromVersion'?: string;
    /**
    * Gets or sets the unique vulnerability database key of this vulnerability type.
    */
    'id'?: number;
    /**
    * Gets or sets a description of the impact of this vulnerability type.
    */
    'impact'?: string;
    /**
    * Gets or sets a description of the remedy for this vulnerability type.
    */
    'remedy'?: string;
    /**
    * Gets or sets the severity level associated with this vulnerability type.
    */
    'severity'?: VersionIssue.SeverityEnum;
    /**
    * Gets or sets a summary of this vulnerability type.
    */
    'summary'?: string;
    /**
    * Gets or sets the title of this vulnerability type.
    */
    'title'?: string;
    /**
    * Gets or sets a value that identifies the application ordinal in which this vulnerability type last occurred.
    */
    'toVersionOrdinal'?: number;
    /**
    * Gets or sets a value that identifies the application version in which this vulnerability type last occurred.
    */
    'toVersion'?: string;
    /**
    * Gets or sets a code that identifies the generic type of this vulnerability.
    */
    'vulnerability'?: string;
    /**
    * Gets or sets the unique identifier for application.
    */
    'application'?: number;
    /**
    * Gets or sets the BDU BDU specification for version issue.
    */
    'bdu'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "exploit",
            "baseName": "Exploit",
            "type": "string"
        },
        {
            "name": "externalReferences",
            "baseName": "ExternalReferences",
            "type": "string"
        },
        {
            "name": "fromVersionOrdinal",
            "baseName": "FromVersionOrdinal",
            "type": "number"
        },
        {
            "name": "fromVersion",
            "baseName": "FromVersion",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "Id",
            "type": "number"
        },
        {
            "name": "impact",
            "baseName": "Impact",
            "type": "string"
        },
        {
            "name": "remedy",
            "baseName": "Remedy",
            "type": "string"
        },
        {
            "name": "severity",
            "baseName": "Severity",
            "type": "VersionIssue.SeverityEnum"
        },
        {
            "name": "summary",
            "baseName": "Summary",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "Title",
            "type": "string"
        },
        {
            "name": "toVersionOrdinal",
            "baseName": "ToVersionOrdinal",
            "type": "number"
        },
        {
            "name": "toVersion",
            "baseName": "ToVersion",
            "type": "string"
        },
        {
            "name": "vulnerability",
            "baseName": "Vulnerability",
            "type": "string"
        },
        {
            "name": "application",
            "baseName": "Application",
            "type": "number"
        },
        {
            "name": "bdu",
            "baseName": "Bdu",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return VersionIssue.attributeTypeMap;
    }
}

export namespace VersionIssue {
    export enum SeverityEnum {
        BestPractice = <any> 'BestPractice',
        Information = <any> 'Information',
        Low = <any> 'Low',
        Medium = <any> 'Medium',
        High = <any> 'High',
        Critical = <any> 'Critical'
    }
}
