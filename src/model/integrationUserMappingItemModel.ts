/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a model that carrying user mapping data.
*/
export class IntegrationUserMappingItemModel {
    /**
    * Gets or sets the user email
    */
    'email'?: string;
    /**
    * Gets or sets the user mapping Id.
    */
    'id'?: string;
    /**
    * Gets or sets the integration system.
    */
    'integrationSystem': IntegrationUserMappingItemModel.IntegrationSystemEnum;
    /**
    * Gets or sets the user\'s integration name.
    */
    'integrationUserName': string;
    /**
    * Gets or sets whether the user mapping is requested for editing
    */
    'isEdit'?: boolean;
    /**
    * Gets or sets the user name
    */
    'name'?: string;
    /**
    * Gets the user\'s nc name in \"Name (Email)\" format.
    */
    'nameEmail'?: string;
    /**
    * Gets the user mapping item result enum.
    */
    'result'?: IntegrationUserMappingItemModel.ResultEnum;
    /**
    * Gets or sets the user Id
    */
    'userId': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "Id",
            "type": "string"
        },
        {
            "name": "integrationSystem",
            "baseName": "IntegrationSystem",
            "type": "IntegrationUserMappingItemModel.IntegrationSystemEnum"
        },
        {
            "name": "integrationUserName",
            "baseName": "IntegrationUserName",
            "type": "string"
        },
        {
            "name": "isEdit",
            "baseName": "IsEdit",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "nameEmail",
            "baseName": "NameEmail",
            "type": "string"
        },
        {
            "name": "result",
            "baseName": "Result",
            "type": "IntegrationUserMappingItemModel.ResultEnum"
        },
        {
            "name": "userId",
            "baseName": "UserId",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IntegrationUserMappingItemModel.attributeTypeMap;
    }
}

export namespace IntegrationUserMappingItemModel {
    export enum IntegrationSystemEnum {
        Teamcity = <any> 'Teamcity',
        Jenkins = <any> 'Jenkins',
        Bamboo = <any> 'Bamboo',
        GitLab = <any> 'GitLab',
        AzureDevOps = <any> 'AzureDevOps',
        Jira = <any> 'Jira',
        CircleCi = <any> 'CircleCI',
        TravisCi = <any> 'TravisCI',
        UrbanCodeDeploy = <any> 'UrbanCodeDeploy',
        GitHubActions = <any> 'GitHubActions'
    }
    export enum ResultEnum {
        NotFound = <any> 'NotFound',
        BadRequest = <any> 'BadRequest',
        Duplicate = <any> 'Duplicate',
        Saved = <any> 'Saved',
        Edited = <any> 'Edited',
        Deleted = <any> 'Deleted',
        Exist = <any> 'Exist'
    }
}
