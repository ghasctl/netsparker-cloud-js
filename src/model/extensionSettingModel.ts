/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Scan policy\'s Extension Setting
*/
export class ExtensionSettingModel {
    /**
    * Gets or set the attack option
    */
    'attackOption': ExtensionSettingModel.AttackOptionEnum;
    /**
    * Gets or sets the crawl option
    */
    'crawlOption': ExtensionSettingModel.CrawlOptionEnum;
    /**
    * Gets or sets the extension
    */
    'extension': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attackOption",
            "baseName": "AttackOption",
            "type": "ExtensionSettingModel.AttackOptionEnum"
        },
        {
            "name": "crawlOption",
            "baseName": "CrawlOption",
            "type": "ExtensionSettingModel.CrawlOptionEnum"
        },
        {
            "name": "extension",
            "baseName": "Extension",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ExtensionSettingModel.attributeTypeMap;
    }
}

export namespace ExtensionSettingModel {
    export enum AttackOptionEnum {
        DoNotAttack = <any> 'DoNotAttack',
        AttackParameters = <any> 'AttackParameters',
        AttackParametersAndQueryString = <any> 'AttackParametersAndQueryString'
    }
    export enum CrawlOptionEnum {
        DoNotCrawl = <any> 'DoNotCrawl',
        Crawl = <any> 'Crawl',
        CrawlOnlyParameter = <any> 'CrawlOnlyParameter'
    }
}
