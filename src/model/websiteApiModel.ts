/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdNamePair } from './idNamePair';

/**
* Represents a model for carrying out website data.
*/
export class WebsiteApiModel {
    /**
    * Gets or sets the website identifier.
    */
    'id'?: string;
    /**
    * Gets or sets the date which this website was created at.
    */
    'createdAt'?: Date;
    /**
    * Gets or sets the date which this website was updated at.
    */
    'updatedAt'?: Date;
    /**
    * Gets or sets the root domain URL.
    */
    'rootUrl'?: string;
    /**
    * Gets or sets a name for this website.
    */
    'name'?: string;
    /**
    * Gets or sets a name for this description.
    */
    'description'?: string;
    /**
    * Gets or sets the technical contact email.
    */
    'technicalContactEmail'?: string;
    /**
    * Gets or sets the name of groups this website will belong to.
    */
    'groups'?: Array<IdNamePair>;
    /**
    * Gets or sets a value indicating whether this website is verified.
    */
    'isVerified'?: boolean;
    /**
    * Gets or sets the type of the subscription.
    */
    'licenseType'?: WebsiteApiModel.LicenseTypeEnum;
    /**
    * Gets or sets the agent mode.
    */
    'agentMode'?: WebsiteApiModel.AgentModeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "Id",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "CreatedAt",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "UpdatedAt",
            "type": "Date"
        },
        {
            "name": "rootUrl",
            "baseName": "RootUrl",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "Description",
            "type": "string"
        },
        {
            "name": "technicalContactEmail",
            "baseName": "TechnicalContactEmail",
            "type": "string"
        },
        {
            "name": "groups",
            "baseName": "Groups",
            "type": "Array<IdNamePair>"
        },
        {
            "name": "isVerified",
            "baseName": "IsVerified",
            "type": "boolean"
        },
        {
            "name": "licenseType",
            "baseName": "LicenseType",
            "type": "WebsiteApiModel.LicenseTypeEnum"
        },
        {
            "name": "agentMode",
            "baseName": "AgentMode",
            "type": "WebsiteApiModel.AgentModeEnum"
        }    ];

    static getAttributeTypeMap() {
        return WebsiteApiModel.attributeTypeMap;
    }
}

export namespace WebsiteApiModel {
    export enum LicenseTypeEnum {
        Subscription = <any> 'Subscription',
        Credit = <any> 'Credit'
    }
    export enum AgentModeEnum {
        Cloud = <any> 'Cloud',
        Internal = <any> 'Internal'
    }
}
