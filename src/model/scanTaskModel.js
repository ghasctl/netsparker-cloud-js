"use strict";
/**
 * Netsparker Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
* Represents a model for carrying {Invicti.Cloud.Core.Models.ScanTask} content.
*/
class ScanTaskModel {
    static getAttributeTypeMap() {
        return ScanTaskModel.attributeTypeMap;
    }
}
ScanTaskModel.discriminator = undefined;
ScanTaskModel.attributeTypeMap = [
    {
        "name": "additionalWebsites",
        "baseName": "AdditionalWebsites",
        "type": "Array<AdditionalWebsiteModel>"
    },
    {
        "name": "agentId",
        "baseName": "AgentId",
        "type": "string"
    },
    {
        "name": "agentName",
        "baseName": "AgentName",
        "type": "string"
    },
    {
        "name": "cookies",
        "baseName": "Cookies",
        "type": "string"
    },
    {
        "name": "crawlAndAttack",
        "baseName": "CrawlAndAttack",
        "type": "boolean"
    },
    {
        "name": "enableHeuristicChecksInCustomUrlRewrite",
        "baseName": "EnableHeuristicChecksInCustomUrlRewrite",
        "type": "boolean"
    },
    {
        "name": "excludedLinks",
        "baseName": "ExcludedLinks",
        "type": "string"
    },
    {
        "name": "excludeLinks",
        "baseName": "ExcludeLinks",
        "type": "boolean"
    },
    {
        "name": "disallowedHttpMethods",
        "baseName": "DisallowedHttpMethods",
        "type": "string"
    },
    {
        "name": "findAndFollowNewLinks",
        "baseName": "FindAndFollowNewLinks",
        "type": "boolean"
    },
    {
        "name": "importedLinks",
        "baseName": "ImportedLinks",
        "type": "string"
    },
    {
        "name": "desktopScanId",
        "baseName": "DesktopScanId",
        "type": "string"
    },
    {
        "name": "initiatedTime",
        "baseName": "InitiatedTime",
        "type": "string"
    },
    {
        "name": "initiatedDate",
        "baseName": "InitiatedDate",
        "type": "string"
    },
    {
        "name": "initiatedAt",
        "baseName": "InitiatedAt",
        "type": "Date"
    },
    {
        "name": "maxDynamicSignatures",
        "baseName": "MaxDynamicSignatures",
        "type": "number"
    },
    {
        "name": "maxScanDuration",
        "baseName": "MaxScanDuration",
        "type": "number"
    },
    {
        "name": "duration",
        "baseName": "Duration",
        "type": "string"
    },
    {
        "name": "policyDescription",
        "baseName": "PolicyDescription",
        "type": "string"
    },
    {
        "name": "policyId",
        "baseName": "PolicyId",
        "type": "string"
    },
    {
        "name": "policyName",
        "baseName": "PolicyName",
        "type": "string"
    },
    {
        "name": "authenticationProfileId",
        "baseName": "AuthenticationProfileId",
        "type": "string"
    },
    {
        "name": "authenticationProfileOption",
        "baseName": "AuthenticationProfileOption",
        "type": "ScanTaskModel.AuthenticationProfileOptionEnum"
    },
    {
        "name": "reportPolicyDescription",
        "baseName": "ReportPolicyDescription",
        "type": "string"
    },
    {
        "name": "reportPolicyId",
        "baseName": "ReportPolicyId",
        "type": "string"
    },
    {
        "name": "reportPolicyName",
        "baseName": "ReportPolicyName",
        "type": "string"
    },
    {
        "name": "scope",
        "baseName": "Scope",
        "type": "ScanTaskModel.ScopeEnum"
    },
    {
        "name": "subPathMaxDynamicSignatures",
        "baseName": "SubPathMaxDynamicSignatures",
        "type": "number"
    },
    {
        "name": "targetPath",
        "baseName": "TargetPath",
        "type": "string"
    },
    {
        "name": "targetUrl",
        "baseName": "TargetUrl",
        "type": "string"
    },
    {
        "name": "targetUrlRoot",
        "baseName": "TargetUrlRoot",
        "type": "string"
    },
    {
        "name": "timeWindow",
        "baseName": "TimeWindow",
        "type": "ScanTimeWindowModel"
    },
    {
        "name": "totalVulnerabilityCount",
        "baseName": "TotalVulnerabilityCount",
        "type": "number"
    },
    {
        "name": "urlRewriteAnalyzableExtensions",
        "baseName": "UrlRewriteAnalyzableExtensions",
        "type": "string"
    },
    {
        "name": "urlRewriteBlockSeparators",
        "baseName": "UrlRewriteBlockSeparators",
        "type": "string"
    },
    {
        "name": "urlRewriteMode",
        "baseName": "UrlRewriteMode",
        "type": "ScanTaskModel.UrlRewriteModeEnum"
    },
    {
        "name": "urlRewriteRules",
        "baseName": "UrlRewriteRules",
        "type": "Array<UrlRewriteRuleModel>"
    },
    {
        "name": "urlRewriteExcludedLinks",
        "baseName": "UrlRewriteExcludedLinks",
        "type": "Array<UrlRewriteExcludedPathModel>"
    },
    {
        "name": "userId",
        "baseName": "UserId",
        "type": "string"
    },
    {
        "name": "vcsCommitInfo",
        "baseName": "VcsCommitInfo",
        "type": "VcsCommitInfo"
    },
    {
        "name": "websiteName",
        "baseName": "WebsiteName",
        "type": "string"
    },
    {
        "name": "websiteUrl",
        "baseName": "WebsiteUrl",
        "type": "string"
    },
    {
        "name": "websiteDescription",
        "baseName": "WebsiteDescription",
        "type": "string"
    },
    {
        "name": "enablePciScanTask",
        "baseName": "EnablePciScanTask",
        "type": "boolean"
    },
    {
        "name": "pciScanTask",
        "baseName": "PciScanTask",
        "type": "PciScanTaskViewModel"
    },
    {
        "name": "userName",
        "baseName": "UserName",
        "type": "string"
    },
    {
        "name": "queuedScanTaskExist",
        "baseName": "QueuedScanTaskExist",
        "type": "boolean"
    },
    {
        "name": "scanTaskProfileId",
        "baseName": "ScanTaskProfileId",
        "type": "string"
    },
    {
        "name": "scanTaskProfile",
        "baseName": "ScanTaskProfile",
        "type": "ReducedScanTaskProfile"
    },
    {
        "name": "completedSteps",
        "baseName": "CompletedSteps",
        "type": "number"
    },
    {
        "name": "estimatedLaunchTime",
        "baseName": "EstimatedLaunchTime",
        "type": "number"
    },
    {
        "name": "estimatedSteps",
        "baseName": "EstimatedSteps",
        "type": "number"
    },
    {
        "name": "failureReason",
        "baseName": "FailureReason",
        "type": "ScanTaskModel.FailureReasonEnum"
    },
    {
        "name": "failureReasonDescription",
        "baseName": "FailureReasonDescription",
        "type": "string"
    },
    {
        "name": "failureReasonString",
        "baseName": "FailureReasonString",
        "type": "string"
    },
    {
        "name": "globalThreatLevel",
        "baseName": "GlobalThreatLevel",
        "type": "ScanTaskModel.GlobalThreatLevelEnum"
    },
    {
        "name": "globalVulnerabilityCriticalCount",
        "baseName": "GlobalVulnerabilityCriticalCount",
        "type": "number"
    },
    {
        "name": "globalVulnerabilityHighCount",
        "baseName": "GlobalVulnerabilityHighCount",
        "type": "number"
    },
    {
        "name": "globalVulnerabilityInfoCount",
        "baseName": "GlobalVulnerabilityInfoCount",
        "type": "number"
    },
    {
        "name": "globalVulnerabilityBestPracticeCount",
        "baseName": "GlobalVulnerabilityBestPracticeCount",
        "type": "number"
    },
    {
        "name": "globalVulnerabilityLowCount",
        "baseName": "GlobalVulnerabilityLowCount",
        "type": "number"
    },
    {
        "name": "globalVulnerabilityMediumCount",
        "baseName": "GlobalVulnerabilityMediumCount",
        "type": "number"
    },
    {
        "name": "id",
        "baseName": "Id",
        "type": "string"
    },
    {
        "name": "isCompleted",
        "baseName": "IsCompleted",
        "type": "boolean"
    },
    {
        "name": "percentage",
        "baseName": "Percentage",
        "type": "number"
    },
    {
        "name": "phase",
        "baseName": "Phase",
        "type": "ScanTaskModel.PhaseEnum"
    },
    {
        "name": "scanTaskGroupId",
        "baseName": "ScanTaskGroupId",
        "type": "string"
    },
    {
        "name": "scanType",
        "baseName": "ScanType",
        "type": "ScanTaskModel.ScanTypeEnum"
    },
    {
        "name": "scheduledScanId",
        "baseName": "ScheduledScanId",
        "type": "string"
    },
    {
        "name": "state",
        "baseName": "State",
        "type": "ScanTaskModel.StateEnum"
    },
    {
        "name": "stateChanged",
        "baseName": "StateChanged",
        "type": "Date"
    },
    {
        "name": "threatLevel",
        "baseName": "ThreatLevel",
        "type": "ScanTaskModel.ThreatLevelEnum"
    },
    {
        "name": "vulnerabilityCriticalCount",
        "baseName": "VulnerabilityCriticalCount",
        "type": "number"
    },
    {
        "name": "vulnerabilityHighCount",
        "baseName": "VulnerabilityHighCount",
        "type": "number"
    },
    {
        "name": "vulnerabilityInfoCount",
        "baseName": "VulnerabilityInfoCount",
        "type": "number"
    },
    {
        "name": "vulnerabilityBestPracticeCount",
        "baseName": "VulnerabilityBestPracticeCount",
        "type": "number"
    },
    {
        "name": "vulnerabilityLowCount",
        "baseName": "VulnerabilityLowCount",
        "type": "number"
    },
    {
        "name": "vulnerabilityMediumCount",
        "baseName": "VulnerabilityMediumCount",
        "type": "number"
    },
    {
        "name": "websiteId",
        "baseName": "WebsiteId",
        "type": "string"
    },
    {
        "name": "initiated",
        "baseName": "Initiated",
        "type": "Date"
    }
];
exports.ScanTaskModel = ScanTaskModel;
(function (ScanTaskModel) {
    let AuthenticationProfileOptionEnum;
    (function (AuthenticationProfileOptionEnum) {
        AuthenticationProfileOptionEnum[AuthenticationProfileOptionEnum["DontUse"] = 'DontUse'] = "DontUse";
        AuthenticationProfileOptionEnum[AuthenticationProfileOptionEnum["UseMatchedProfile"] = 'UseMatchedProfile'] = "UseMatchedProfile";
        AuthenticationProfileOptionEnum[AuthenticationProfileOptionEnum["SelectedProfile"] = 'SelectedProfile'] = "SelectedProfile";
    })(AuthenticationProfileOptionEnum = ScanTaskModel.AuthenticationProfileOptionEnum || (ScanTaskModel.AuthenticationProfileOptionEnum = {}));
    let ScopeEnum;
    (function (ScopeEnum) {
        ScopeEnum[ScopeEnum["EnteredPathAndBelow"] = 'EnteredPathAndBelow'] = "EnteredPathAndBelow";
        ScopeEnum[ScopeEnum["OnlyEnteredUrl"] = 'OnlyEnteredUrl'] = "OnlyEnteredUrl";
        ScopeEnum[ScopeEnum["WholeDomain"] = 'WholeDomain'] = "WholeDomain";
    })(ScopeEnum = ScanTaskModel.ScopeEnum || (ScanTaskModel.ScopeEnum = {}));
    let UrlRewriteModeEnum;
    (function (UrlRewriteModeEnum) {
        UrlRewriteModeEnum[UrlRewriteModeEnum["None"] = 'None'] = "None";
        UrlRewriteModeEnum[UrlRewriteModeEnum["Heuristic"] = 'Heuristic'] = "Heuristic";
        UrlRewriteModeEnum[UrlRewriteModeEnum["Custom"] = 'Custom'] = "Custom";
    })(UrlRewriteModeEnum = ScanTaskModel.UrlRewriteModeEnum || (ScanTaskModel.UrlRewriteModeEnum = {}));
    let FailureReasonEnum;
    (function (FailureReasonEnum) {
        FailureReasonEnum[FailureReasonEnum["NameResolutionFailure"] = 'NameResolutionFailure'] = "NameResolutionFailure";
        FailureReasonEnum[FailureReasonEnum["HostUnavailable"] = 'HostUnavailable'] = "HostUnavailable";
        FailureReasonEnum[FailureReasonEnum["ProxyFailure"] = 'ProxyFailure'] = "ProxyFailure";
        FailureReasonEnum[FailureReasonEnum["UnableToLoadScanSession"] = 'UnableToLoadScanSession'] = "UnableToLoadScanSession";
        FailureReasonEnum[FailureReasonEnum["AgentNotAvailable"] = 'AgentNotAvailable'] = "AgentNotAvailable";
        FailureReasonEnum[FailureReasonEnum["ScanNotAllowed"] = 'ScanNotAllowed'] = "ScanNotAllowed";
        FailureReasonEnum[FailureReasonEnum["MaxLogoutExceeded"] = 'MaxLogoutExceeded'] = "MaxLogoutExceeded";
        FailureReasonEnum[FailureReasonEnum["TargetLinkTimeoutDetected"] = 'TargetLinkTimeoutDetected'] = "TargetLinkTimeoutDetected";
        FailureReasonEnum[FailureReasonEnum["LoginFailed"] = 'LoginFailed'] = "LoginFailed";
        FailureReasonEnum[FailureReasonEnum["UnableToFindAutoSaveNdb"] = 'UnableToFindAutoSaveNdb'] = "UnableToFindAutoSaveNdb";
        FailureReasonEnum[FailureReasonEnum["ScanPolicyNotFound"] = 'ScanPolicyNotFound'] = "ScanPolicyNotFound";
        FailureReasonEnum[FailureReasonEnum["ReportPolicyNotFound"] = 'ReportPolicyNotFound'] = "ReportPolicyNotFound";
        FailureReasonEnum[FailureReasonEnum["ErrorOccurredOnScanFailed"] = 'ErrorOccurredOnScanFailed'] = "ErrorOccurredOnScanFailed";
        FailureReasonEnum[FailureReasonEnum["ErrorOccurredOnPause"] = 'ErrorOccurredOnPause'] = "ErrorOccurredOnPause";
        FailureReasonEnum[FailureReasonEnum["ErrorOccurredOnCancel"] = 'ErrorOccurredOnCancel'] = "ErrorOccurredOnCancel";
        FailureReasonEnum[FailureReasonEnum["ErrorOccurredOnScanCompleted"] = 'ErrorOccurredOnScanCompleted'] = "ErrorOccurredOnScanCompleted";
        FailureReasonEnum[FailureReasonEnum["SevenZipNotFoundOrInstalled"] = 'SevenZipNotFoundOrInstalled'] = "SevenZipNotFoundOrInstalled";
    })(FailureReasonEnum = ScanTaskModel.FailureReasonEnum || (ScanTaskModel.FailureReasonEnum = {}));
    let GlobalThreatLevelEnum;
    (function (GlobalThreatLevelEnum) {
        GlobalThreatLevelEnum[GlobalThreatLevelEnum["Unknown"] = 'Unknown'] = "Unknown";
        GlobalThreatLevelEnum[GlobalThreatLevelEnum["Secure"] = 'Secure'] = "Secure";
        GlobalThreatLevelEnum[GlobalThreatLevelEnum["NeedsAttention"] = 'NeedsAttention'] = "NeedsAttention";
        GlobalThreatLevelEnum[GlobalThreatLevelEnum["Insecure"] = 'Insecure'] = "Insecure";
        GlobalThreatLevelEnum[GlobalThreatLevelEnum["Critical"] = 'Critical'] = "Critical";
    })(GlobalThreatLevelEnum = ScanTaskModel.GlobalThreatLevelEnum || (ScanTaskModel.GlobalThreatLevelEnum = {}));
    let PhaseEnum;
    (function (PhaseEnum) {
        PhaseEnum[PhaseEnum["Pending"] = 'Pending'] = "Pending";
        PhaseEnum[PhaseEnum["Crawling"] = 'Crawling'] = "Crawling";
        PhaseEnum[PhaseEnum["CrawlingAndAttacking"] = 'CrawlingAndAttacking'] = "CrawlingAndAttacking";
        PhaseEnum[PhaseEnum["Attacking"] = 'Attacking'] = "Attacking";
        PhaseEnum[PhaseEnum["ReCrawling"] = 'ReCrawling'] = "ReCrawling";
        PhaseEnum[PhaseEnum["Complete"] = 'Complete'] = "Complete";
    })(PhaseEnum = ScanTaskModel.PhaseEnum || (ScanTaskModel.PhaseEnum = {}));
    let ScanTypeEnum;
    (function (ScanTypeEnum) {
        ScanTypeEnum[ScanTypeEnum["Full"] = 'Full'] = "Full";
        ScanTypeEnum[ScanTypeEnum["Retest"] = 'Retest'] = "Retest";
        ScanTypeEnum[ScanTypeEnum["Incremental"] = 'Incremental'] = "Incremental";
    })(ScanTypeEnum = ScanTaskModel.ScanTypeEnum || (ScanTaskModel.ScanTypeEnum = {}));
    let StateEnum;
    (function (StateEnum) {
        StateEnum[StateEnum["Queued"] = 'Queued'] = "Queued";
        StateEnum[StateEnum["Scanning"] = 'Scanning'] = "Scanning";
        StateEnum[StateEnum["Archiving"] = 'Archiving'] = "Archiving";
        StateEnum[StateEnum["Complete"] = 'Complete'] = "Complete";
        StateEnum[StateEnum["Failed"] = 'Failed'] = "Failed";
        StateEnum[StateEnum["Cancelled"] = 'Cancelled'] = "Cancelled";
        StateEnum[StateEnum["Delayed"] = 'Delayed'] = "Delayed";
        StateEnum[StateEnum["Pausing"] = 'Pausing'] = "Pausing";
        StateEnum[StateEnum["Paused"] = 'Paused'] = "Paused";
        StateEnum[StateEnum["Resuming"] = 'Resuming'] = "Resuming";
    })(StateEnum = ScanTaskModel.StateEnum || (ScanTaskModel.StateEnum = {}));
    let ThreatLevelEnum;
    (function (ThreatLevelEnum) {
        ThreatLevelEnum[ThreatLevelEnum["Unknown"] = 'Unknown'] = "Unknown";
        ThreatLevelEnum[ThreatLevelEnum["Secure"] = 'Secure'] = "Secure";
        ThreatLevelEnum[ThreatLevelEnum["NeedsAttention"] = 'NeedsAttention'] = "NeedsAttention";
        ThreatLevelEnum[ThreatLevelEnum["Insecure"] = 'Insecure'] = "Insecure";
        ThreatLevelEnum[ThreatLevelEnum["Critical"] = 'Critical'] = "Critical";
    })(ThreatLevelEnum = ScanTaskModel.ThreatLevelEnum || (ScanTaskModel.ThreatLevelEnum = {}));
})(ScanTaskModel = exports.ScanTaskModel || (exports.ScanTaskModel = {}));
//# sourceMappingURL=scanTaskModel.js.map